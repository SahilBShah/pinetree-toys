protein1[i] <- p1_data$transcript
protein2[i] <- p2_data$transcript
}
#Create dataframe needed for ggplot
data1 <- data.frame(cbind(x_data, protein1))
colnames(data1) <- c('strengths','values')
data2 <- data.frame(cbind(x_data, protein2))
colnames(data2) <- c('strengths','values')
#Create and save plot
rnase_line_plot <- ggplot() + geom_point(stat='identity') + geom_line(aes(x=data1$strengths, y=data1$values), size=1, stat='identity') + geom_line(aes(x=data2$strengths, y=data2$values), size=1, stat='identity') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("RNAse Site Strength") + ylab("Protein2 transcript abundance/Protein1 transcript abundance") + ggtitle("Ratio of Protein Transcripts according to RNAse Strengths") + panel_border()
ggsave("../../data/parameter_testing/figures/rnase_abundance_parameters.png", rnase_line_plot)
setwd('../../data/parameter_testing/')
#List all rnase files
rnase_files <- list.files(pattern="rnase_test_")
rnase_files <- mixedsort(sort(rnase_files))
#Set x-axis scale
x_data <- c(0.0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1.0, 1.05, 1.1, 1.15, 1.2, 1.25, 1.3, 1.35, 1.4, 1.45, 1.5)
protein1 <- c()
protein2 <- c()
#Get transcript abundaces at time point 239 seconds and calculate ratio between protein2 and protein1 abundances
for (i in 1:length(rnase_files)){
p1_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
p2_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein2') %>% select('transcript')
protein1[i] <- p1_data$transcript
protein2[i] <- p2_data$transcript
}
#Create dataframe needed for ggplot
data1 <- data.frame(cbind(x_data, protein1))
colnames(data1) <- c('strengths','values')
data2 <- data.frame(cbind(x_data, protein2))
colnames(data2) <- c('strengths','values')
#Create and save plot
rnase_line_plot <- ggplot() + geom_point(stat='identity') + geom_line(aes(x=data1$strengths, y=data1$values), size=1, stat='identity', color='#56B4E9') + geom_line(aes(x=data2$strengths, y=data2$values), size=1, stat='identity', color='#E69F00') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("RNAse Site Strength") + ylab("Protein Transcript Abundances") + ggtitle("Protein Transcript Abundances according to RNAse Strengths") + panel_border()
ggsave("../../data/parameter_testing/figures/rnase_abundance_parameters.png", rnase_line_plot)
knitr::opts_chunk$set(echo = TRUE)
library(cowplot)
library(dplyr)
library(gridExtra)
library(ggplot2)
library(grid)
library(reshape2)
library(gtools)
setwd('../../data/parameter_testing/')
#List promoter files
prom_files <- list.files(pattern="prom_test_")
prom_files <- mixedsort(sort(prom_files))
#Set x-axis scale
x_data <- c(log(10e5), log(10e6), log(10e7), log(10e8), log(10e9), log(10e10), log(10e11), log(10e12), log(10e13), log(10e14), log(10e15), log(10e16), log(10e17), log(10e18), log(10e19), log(10e20))
y_data <- c()
#Get transcript abundace at time point 239 seconds
for (i in 1:length(prom_files)){
p1_data <- read.table(prom_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
y_data[i] <- p1_data$transcript
}
#Create dataframe for ggplot
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
#Create and save plot
prom_line_plot <- ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity') + geom_line(size=1, stat='identity') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("Promoter Strength (Log Scale)") + ylab("Protein1 Transcript Abundances") + ggtitle("Abundance of Protein Transcripts according to Promoter Strengths") + panel_border()
ggsave("../../data/parameter_testing/figures/promoter_abundance_parameters.png", prom_line_plot)
setwd('../../data/parameter_testing/')
#List terminator files
term_files <- list.files(pattern="term_test_")
term_files <- mixedsort(sort(term_files))
#Set x-axis scale
x_data <- c(0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0)
y_data <- c()
#Get transcript abundaces at time point 239 seconds and calculate ratio between protein2 and protein1 abundances
for (i in 1:length(term_files)){
p1_data <- read.table(term_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
p2_data <- read.table(term_files[i], header=TRUE) %>% filter(time==239, species=='protein2') %>% select('transcript')
if (nrow(p2_data) != 0){
y_data[i] <- p2_data$transcript/p1_data$transcript
}else{
y_data[i] <- 0
}
}
#Create dataframe needed for ggplot
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
#Create and save plot
term_line_plot <- ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity') + geom_line(size=1, stat='identity') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("Terminator Strength") + ylab("Protein2 transcript abundance/Protein1 transcript abundance") + ggtitle("Ratio of Protein Transcripts according to Terminator Strengths") + panel_border()
ggsave("../../data/parameter_testing/figures/terminators_ratio_parameters.png", term_line_plot)
setwd('../../data/parameter_testing/')
#List all rnase files
rnase_files <- list.files(pattern="rnase_test_")
rnase_files <- mixedsort(sort(rnase_files))
#Set x-axis scale
x_data <- c(0.0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1.0, 1.05, 1.1, 1.15, 1.2, 1.25, 1.3, 1.35, 1.4, 1.45, 1.5)
y_data <- c()
#Get transcript abundaces at time point 239 seconds and calculate ratio between protein2 and protein1 abundances
for (i in 1:length(rnase_files)){
p1_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
p2_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein2') %>% select('transcript')
y_data[i] <- p2_data$transcript/p1_data$transcript
}
#Create dataframe needed for ggplot
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
#Create and save plot
rnase_line_plot <- ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity') + geom_line(size=1, stat='identity') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("RNAse Site Strength") + ylab("Protein2 transcript abundance/Protein1 transcript abundance") + ggtitle("Ratio of Protein Transcripts according to RNAse Strengths") + panel_border()
ggsave("../../data/parameter_testing/figures/rnase_ratio_parameters.png", rnase_line_plot)
setwd('../../data/parameter_testing/')
#List all rnase files
rnase_files <- list.files(pattern="rnase_test_")
rnase_files <- mixedsort(sort(rnase_files))
#Set x-axis scale
x_data <- c(0.0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1.0, 1.05, 1.1, 1.15, 1.2, 1.25, 1.3, 1.35, 1.4, 1.45, 1.5)
protein1 <- c()
protein2 <- c()
#Get transcript abundaces at time point 239 seconds and calculate ratio between protein2 and protein1 abundances
for (i in 1:length(rnase_files)){
p1_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
p2_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein2') %>% select('transcript')
protein1[i] <- p1_data$transcript
protein2[i] <- p2_data$transcript
}
#Create dataframe needed for ggplot
data1 <- data.frame(cbind(x_data, protein1))
colnames(data1) <- c('strengths','values')
data2 <- data.frame(cbind(x_data, protein2))
colnames(data2) <- c('strengths','values')
#Create and save plot
rnase_line_plot <- ggplot() + geom_point(stat='identity') + geom_line(aes(x=data1$strengths, y=data1$values), size=1, stat='identity', color='#56B4E9') + geom_line(aes(x=data2$strengths, y=data2$values), size=1, stat='identity', color='#E69F00') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("RNAse Site Strength") + ylab("Protein Transcript Abundances") + ggtitle("Protein Transcript Abundances according to RNAse Strengths") + panel_border()
ggsave("../../data/parameter_testing/figures/rnase_abundance_parameters.png", rnase_line_plot)
knitr::opts_chunk$set(echo = TRUE)
library(cowplot)
library(dplyr)
library(gridExtra)
library(ggplot2)
library(grid)
library(reshape2)
library(gtools)
setwd('../../data/parameter_testing/')
#List promoter files
prom_files <- list.files(pattern="prom_test_")
prom_files <- mixedsort(sort(prom_files))
#Set x-axis scale
x_data <- c(log(10e5), log(10e6), log(10e7), log(10e8), log(10e9), log(10e10), log(10e11), log(10e12), log(10e13), log(10e14), log(10e15), log(10e16), log(10e17), log(10e18), log(10e19), log(10e20))
y_data <- c()
#Get transcript abundace at time point 239 seconds
for (i in 1:length(prom_files)){
p1_data <- read.table(prom_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
y_data[i] <- p1_data$transcript
}
#Create dataframe for ggplot
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
#Create and save plot
prom_line_plot <- ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity') + geom_line(size=1, stat='identity', color='#56B4E9') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("Promoter Strength (Log Scale)") + ylab("Protein1 Transcript Abundances") + ggtitle("Abundance of Protein Transcripts according to Promoter Strengths") + panel_border()
ggsave("../../data/parameter_testing/figures/promoter_abundance_parameters.png", prom_line_plot)
setwd('../../data/parameter_testing/')
#List terminator files
term_files <- list.files(pattern="term_test_")
term_files <- mixedsort(sort(term_files))
#Set x-axis scale
x_data <- c(0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0)
y_data <- c()
#Get transcript abundaces at time point 239 seconds and calculate ratio between protein2 and protein1 abundances
for (i in 1:length(term_files)){
p1_data <- read.table(term_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
p2_data <- read.table(term_files[i], header=TRUE) %>% filter(time==239, species=='protein2') %>% select('transcript')
if (nrow(p2_data) != 0){
y_data[i] <- p2_data$transcript/p1_data$transcript
}else{
y_data[i] <- 0
}
}
#Create dataframe needed for ggplot
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
#Create and save plot
term_line_plot <- ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity') + geom_line(size=1, stat='identity', color='#56B4E9') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("Terminator Strength") + ylab("Protein2 transcript abundance/Protein1 transcript abundance") + ggtitle("Ratio of Protein Transcripts according to Terminator Strengths") + panel_border()
ggsave("../../data/parameter_testing/figures/terminators_ratio_parameters.png", term_line_plot)
setwd('../../data/parameter_testing/')
#List all rnase files
rnase_files <- list.files(pattern="rnase_test_")
rnase_files <- mixedsort(sort(rnase_files))
#Set x-axis scale
x_data <- c(0.0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1.0, 1.05, 1.1, 1.15, 1.2, 1.25, 1.3, 1.35, 1.4, 1.45, 1.5)
y_data <- c()
#Get transcript abundaces at time point 239 seconds and calculate ratio between protein2 and protein1 abundances
for (i in 1:length(rnase_files)){
p1_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
p2_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein2') %>% select('transcript')
y_data[i] <- p2_data$transcript/p1_data$transcript
}
#Create dataframe needed for ggplot
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
#Create and save plot
rnase_line_plot <- ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity') + geom_line(size=1, stat='identity', color='#56B4E9') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("RNAse Site Strength") + ylab("Protein2 transcript abundance/Protein1 transcript abundance") + ggtitle("Ratio of Protein Transcripts according to RNAse Strengths") + panel_border()
ggsave("../../data/parameter_testing/figures/rnase_ratio_parameters.png", rnase_line_plot)
setwd('../../data/parameter_testing/')
#List all rnase files
rnase_files <- list.files(pattern="rnase_test_")
rnase_files <- mixedsort(sort(rnase_files))
#Set x-axis scale
x_data <- c(0.0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1.0, 1.05, 1.1, 1.15, 1.2, 1.25, 1.3, 1.35, 1.4, 1.45, 1.5)
protein1 <- c()
protein2 <- c()
#Get transcript abundaces at time point 239 seconds and calculate ratio between protein2 and protein1 abundances
for (i in 1:length(rnase_files)){
p1_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
p2_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein2') %>% select('transcript')
protein1[i] <- p1_data$transcript
protein2[i] <- p2_data$transcript
}
#Create dataframe needed for ggplot
data1 <- data.frame(cbind(x_data, protein1))
colnames(data1) <- c('strengths','values')
data2 <- data.frame(cbind(x_data, protein2))
colnames(data2) <- c('strengths','values')
#Create and save plot
rnase_line_plot <- ggplot() + geom_point(stat='identity') + geom_line(aes(x=data1$strengths, y=data1$values), size=1, stat='identity', color='#56B4E9') + geom_line(aes(x=data2$strengths, y=data2$values), size=1, stat='identity', color='#E69F00') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("RNAse Site Strength") + ylab("Protein Transcript Abundances") + ggtitle("Protein Transcript Abundances according to RNAse Strengths") + panel_border()
ggsave("../../data/parameter_testing/figures/rnase_abundance_parameters.png", rnase_line_plot)
knitr::opts_chunk$set(echo = TRUE)
library(cowplot)
library(dplyr)
library(gridExtra)
library(ggplot2)
library(grid)
library(reshape2)
library(gtools)
setwd('../../data/parameter_testing/')
#List promoter files
prom_files <- list.files(pattern="prom_test_")
prom_files <- mixedsort(sort(prom_files))
#Set x-axis scale
x_data <- c(log(10e5), log(10e6), log(10e7), log(10e8), log(10e9), log(10e10), log(10e11), log(10e12), log(10e13), log(10e14), log(10e15), log(10e16), log(10e17), log(10e18), log(10e19), log(10e20))
y_data <- c()
#Get transcript abundace at time point 239 seconds
for (i in 1:length(prom_files)){
p1_data <- read.table(prom_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
y_data[i] <- p1_data$transcript
}
#Create dataframe for ggplot
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
#Create and save plot
prom_line_plot <- ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity', color='#E69F00') + geom_line(size=1, stat='identity', color='#E69F00') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("Promoter Strength (Log Scale)") + ylab("Protein1 Transcript Abundances") + ggtitle("Abundance of Protein Transcripts according to Promoter Strengths") + panel_border()
ggsave("../../data/parameter_testing/figures/promoter_abundance_parameters.png", prom_line_plot)
setwd('../../data/parameter_testing/')
#List terminator files
term_files <- list.files(pattern="term_test_")
term_files <- mixedsort(sort(term_files))
#Set x-axis scale
x_data <- c(0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0)
y_data <- c()
#Get transcript abundaces at time point 239 seconds and calculate ratio between protein2 and protein1 abundances
for (i in 1:length(term_files)){
p1_data <- read.table(term_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
p2_data <- read.table(term_files[i], header=TRUE) %>% filter(time==239, species=='protein2') %>% select('transcript')
if (nrow(p2_data) != 0){
y_data[i] <- p2_data$transcript/p1_data$transcript
}else{
y_data[i] <- 0
}
}
#Create dataframe needed for ggplot
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
#Create and save plot
term_line_plot <- ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity', color='#E69F00') + geom_line(size=1, stat='identity', color='#E69F00') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("Terminator Strength") + ylab("Protein2 transcript abundance/Protein1 transcript abundance") + ggtitle("Ratio of Protein Transcripts according to Terminator Strengths") + panel_border()
ggsave("../../data/parameter_testing/figures/terminators_ratio_parameters.png", term_line_plot)
setwd('../../data/parameter_testing/')
#List all rnase files
rnase_files <- list.files(pattern="rnase_test_")
rnase_files <- mixedsort(sort(rnase_files))
#Set x-axis scale
x_data <- c(0.0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1.0, 1.05, 1.1, 1.15, 1.2, 1.25, 1.3, 1.35, 1.4, 1.45, 1.5)
y_data <- c()
#Get transcript abundaces at time point 239 seconds and calculate ratio between protein2 and protein1 abundances
for (i in 1:length(rnase_files)){
p1_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
p2_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein2') %>% select('transcript')
y_data[i] <- p2_data$transcript/p1_data$transcript
}
#Create dataframe needed for ggplot
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
#Create and save plot
rnase_line_plot <- ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity', color='#E69F00') + geom_line(size=1, stat='identity', color='#E69F00') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("RNAse Site Strength") + ylab("Protein2 transcript abundance/Protein1 transcript abundance") + ggtitle("Ratio of Protein Transcripts according to RNAse Strengths") + panel_border()
ggsave("../../data/parameter_testing/figures/rnase_ratio_parameters.png", rnase_line_plot)
setwd('../../data/parameter_testing/')
#List all rnase files
rnase_files <- list.files(pattern="rnase_test_")
rnase_files <- mixedsort(sort(rnase_files))
#Set x-axis scale
x_data <- c(0.0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1.0, 1.05, 1.1, 1.15, 1.2, 1.25, 1.3, 1.35, 1.4, 1.45, 1.5)
protein1 <- c()
protein2 <- c()
#Get transcript abundaces at time point 239 seconds and calculate ratio between protein2 and protein1 abundances
for (i in 1:length(rnase_files)){
p1_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
p2_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein2') %>% select('transcript')
protein1[i] <- p1_data$transcript
protein2[i] <- p2_data$transcript
}
#Create dataframe needed for ggplot
data1 <- data.frame(cbind(x_data, protein1))
colnames(data1) <- c('strengths','values')
data2 <- data.frame(cbind(x_data, protein2))
colnames(data2) <- c('strengths','values')
#Create and save plot
rnase_line_plot <- ggplot() + geom_point(stat='identity', color='#E69F00') + geom_line(aes(x=data1$strengths, y=data1$values), size=1, stat='identity', color='#56B4E9') + geom_line(aes(x=data2$strengths, y=data2$values), size=1, stat='identity', color='#E69F00') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("RNAse Site Strength") + ylab("Protein Transcript Abundances") + ggtitle("Protein Transcript Abundances according to RNAse Strengths") + panel_border()
ggsave("../../data/parameter_testing/figures/rnase_abundance_parameters.png", rnase_line_plot)
knitr::opts_chunk$set(echo = TRUE)
library(cowplot)
library(dplyr)
library(gridExtra)
library(ggplot2)
library(grid)
library(reshape2)
library(gtools)
setwd('../../data/parameter_testing/')
#List promoter files
prom_files <- list.files(pattern="prom_test_")
prom_files <- mixedsort(sort(prom_files))
#Set x-axis scale
x_data <- c(log(10e5), log(10e6), log(10e7), log(10e8), log(10e9), log(10e10), log(10e11), log(10e12), log(10e13), log(10e14), log(10e15), log(10e16), log(10e17), log(10e18), log(10e19), log(10e20))
y_data <- c()
#Get transcript abundace at time point 239 seconds
for (i in 1:length(prom_files)){
p1_data <- read.table(prom_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
y_data[i] <- p1_data$transcript
}
#Create dataframe for ggplot
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
#Create and save plot
prom_line_plot <- ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity', color='#56B4E9') + geom_line(size=1, stat='identity', color='#56B4E9') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("Promoter Strength (Log Scale)") + ylab("Protein1 Transcript Abundances") + ggtitle("Abundance of Protein Transcripts according to Promoter Strengths") + panel_border()
ggsave("../../data/parameter_testing/figures/promoter_abundance_parameters.png", prom_line_plot)
setwd('../../data/parameter_testing/')
#List terminator files
term_files <- list.files(pattern="term_test_")
term_files <- mixedsort(sort(term_files))
#Set x-axis scale
x_data <- c(0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0)
y_data <- c()
#Get transcript abundaces at time point 239 seconds and calculate ratio between protein2 and protein1 abundances
for (i in 1:length(term_files)){
p1_data <- read.table(term_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
p2_data <- read.table(term_files[i], header=TRUE) %>% filter(time==239, species=='protein2') %>% select('transcript')
if (nrow(p2_data) != 0){
y_data[i] <- p2_data$transcript/p1_data$transcript
}else{
y_data[i] <- 0
}
}
#Create dataframe needed for ggplot
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
#Create and save plot
term_line_plot <- ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity', color='#56B4E9') + geom_line(size=1, stat='identity', color='#56B4E9') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("Terminator Strength") + ylab("Protein2 transcript abundance/Protein1 transcript abundance") + ggtitle("Ratio of Protein Transcripts according to Terminator Strengths") + panel_border()
ggsave("../../data/parameter_testing/figures/terminators_ratio_parameters.png", term_line_plot)
setwd('../../data/parameter_testing/')
#List all rnase files
rnase_files <- list.files(pattern="rnase_test_")
rnase_files <- mixedsort(sort(rnase_files))
#Set x-axis scale
x_data <- c(0.0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1.0, 1.05, 1.1, 1.15, 1.2, 1.25, 1.3, 1.35, 1.4, 1.45, 1.5)
y_data <- c()
#Get transcript abundaces at time point 239 seconds and calculate ratio between protein2 and protein1 abundances
for (i in 1:length(rnase_files)){
p1_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
p2_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein2') %>% select('transcript')
y_data[i] <- p2_data$transcript/p1_data$transcript
}
#Create dataframe needed for ggplot
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
#Create and save plot
rnase_line_plot <- ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity', color='#56B4E9') + geom_line(size=1, stat='identity', color='#56B4E9') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("RNAse Site Strength") + ylab("Protein2 transcript abundance/Protein1 transcript abundance") + ggtitle("Ratio of Protein Transcripts according to RNAse Strengths") + panel_border()
ggsave("../../data/parameter_testing/figures/rnase_ratio_parameters.png", rnase_line_plot)
setwd('../../data/parameter_testing/')
#List all rnase files
rnase_files <- list.files(pattern="rnase_test_")
rnase_files <- mixedsort(sort(rnase_files))
#Set x-axis scale
x_data <- c(0.0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1.0, 1.05, 1.1, 1.15, 1.2, 1.25, 1.3, 1.35, 1.4, 1.45, 1.5)
protein1 <- c()
protein2 <- c()
#Get transcript abundaces at time point 239 seconds and calculate ratio between protein2 and protein1 abundances
for (i in 1:length(rnase_files)){
p1_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
p2_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein2') %>% select('transcript')
protein1[i] <- p1_data$transcript
protein2[i] <- p2_data$transcript
}
#Create dataframe needed for ggplot
data1 <- data.frame(cbind(x_data, protein1))
colnames(data1) <- c('strengths','values')
data2 <- data.frame(cbind(x_data, protein2))
colnames(data2) <- c('strengths','values')
#Create and save plot
rnase_line_plot <- ggplot() + geom_point(stat='identity') + geom_line(aes(x=data1$strengths, y=data1$values), size=1, stat='identity', color='#56B4E9') + geom_line(aes(x=data2$strengths, y=data2$values), size=1, stat='identity', color='#E69F00') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("RNAse Site Strength") + ylab("Protein Transcript Abundances") + ggtitle("Protein Transcript Abundances according to RNAse Strengths") + panel_border()
ggsave("../../data/parameter_testing/figures/rnase_abundance_parameters.png", rnase_line_plot)
setwd('../../data/parameter_testing/')
#List all rnase files
rnase_files <- list.files(pattern="rnase_test_")
rnase_files <- mixedsort(sort(rnase_files))
#Set x-axis scale
x_data <- c(0.0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1.0, 1.05, 1.1, 1.15, 1.2, 1.25, 1.3, 1.35, 1.4, 1.45, 1.5)
protein1 <- c()
protein2 <- c()
#Get transcript abundaces at time point 239 seconds and calculate ratio between protein2 and protein1 abundances
for (i in 1:length(rnase_files)){
p1_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
p2_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein2') %>% select('transcript')
protein1[i] <- p1_data$transcript
protein2[i] <- p2_data$transcript
}
#Create dataframe needed for ggplot
data1 <- data.frame(cbind(x_data, protein1))
colnames(data1) <- c('strengths','values')
data2 <- data.frame(cbind(x_data, protein2))
colnames(data2) <- c('strengths','values')
#Create and save plot
rnase_line_plot <- ggplot() + geom_point(aes(x=data1$strengths, y=data1$values), stat='identity', color='#56B4E9') + geom_point(aes(x=data2$strengths, y=data2$values), stat='identity', color='#E69F00') + geom_line(aes(x=data1$strengths, y=data1$values), size=1, stat='identity', color='#56B4E9') + geom_line(aes(x=data2$strengths, y=data2$values), size=1, stat='identity', color='#E69F00') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("RNAse Site Strength") + ylab("Protein Transcript Abundances") + ggtitle("Protein Transcript Abundances according to RNAse Strengths") + panel_border()
ggsave("../../data/parameter_testing/figures/rnase_abundance_parameters.png", rnase_line_plot)
knitr::opts_chunk$set(echo = TRUE)
library(cowplot)
library(dplyr)
library(gridExtra)
library(ggplot2)
library(grid)
library(reshape2)
library(gtools)
setwd('../../data/parameter_testing/')
#List promoter files
prom_files <- list.files(pattern="prom_test_")
prom_files <- mixedsort(sort(prom_files))
#Set x-axis scale
x_data <- c(log(10e5), log(10e6), log(10e7), log(10e8), log(10e9), log(10e10), log(10e11), log(10e12), log(10e13), log(10e14), log(10e15), log(10e16), log(10e17), log(10e18), log(10e19), log(10e20))
y_data <- c()
#Get transcript abundace at time point 239 seconds
for (i in 1:length(prom_files)){
p1_data <- read.table(prom_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
y_data[i] <- p1_data$transcript
}
#Create dataframe for ggplot
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
#Create and save plot
prom_line_plot <- ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity', color='#56B4E9') + geom_line(size=1, stat='identity', color='#56B4E9') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("Promoter Strength (Log Scale)") + ylab("Protein1 Transcript Abundances") + ggtitle("Abundance of Protein Transcripts in relation to Promoter Strengths") + panel_border()
ggsave("../../data/parameter_testing/figures/promoter_abundance_parameters.png", prom_line_plot)
setwd('../../data/parameter_testing/')
#List terminator files
term_files <- list.files(pattern="term_test_")
term_files <- mixedsort(sort(term_files))
#Set x-axis scale
x_data <- c(0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0)
y_data <- c()
#Get transcript abundaces at time point 239 seconds and calculate ratio between protein2 and protein1 abundances
for (i in 1:length(term_files)){
p1_data <- read.table(term_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
p2_data <- read.table(term_files[i], header=TRUE) %>% filter(time==239, species=='protein2') %>% select('transcript')
if (nrow(p2_data) != 0){
y_data[i] <- p2_data$transcript/p1_data$transcript
}else{
y_data[i] <- 0
}
}
#Create dataframe needed for ggplot
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
#Create and save plot
term_line_plot <- ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity', color='#56B4E9') + geom_line(size=1, stat='identity', color='#56B4E9') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("Terminator Strength") + ylab("Protein2 transcript abundance/Protein1 transcript abundance") + ggtitle("Ratio of Protein Transcripts in relation to Terminator Strengths") + panel_border()
ggsave("../../data/parameter_testing/figures/terminators_ratio_parameters.png", term_line_plot)
setwd('../../data/parameter_testing/')
#List all rnase files
rnase_files <- list.files(pattern="rnase_test_")
rnase_files <- mixedsort(sort(rnase_files))
#Set x-axis scale
x_data <- c(0.0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1.0, 1.05, 1.1, 1.15, 1.2, 1.25, 1.3, 1.35, 1.4, 1.45, 1.5)
y_data <- c()
#Get transcript abundaces at time point 239 seconds and calculate ratio between protein2 and protein1 abundances
for (i in 1:length(rnase_files)){
p1_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
p2_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein2') %>% select('transcript')
y_data[i] <- p2_data$transcript/p1_data$transcript
}
#Create dataframe needed for ggplot
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
#Create and save plot
rnase_line_plot <- ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity', color='#56B4E9') + geom_line(size=1, stat='identity', color='#56B4E9') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("RNAse Site Strength") + ylab("Protein2 transcript abundance/Protein1 transcript abundance") + ggtitle("Ratio of Protein Transcripts in relation to RNAse Strengths") + panel_border()
ggsave("../../data/parameter_testing/figures/rnase_ratio_parameters.png", rnase_line_plot)
setwd('../../data/parameter_testing/')
#List all rnase files
rnase_files <- list.files(pattern="rnase_test_")
rnase_files <- mixedsort(sort(rnase_files))
#Set x-axis scale
x_data <- c(0.0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1.0, 1.05, 1.1, 1.15, 1.2, 1.25, 1.3, 1.35, 1.4, 1.45, 1.5)
protein1 <- c()
protein2 <- c()
#Get transcript abundaces at time point 239 seconds and calculate ratio between protein2 and protein1 abundances
for (i in 1:length(rnase_files)){
p1_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
p2_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein2') %>% select('transcript')
protein1[i] <- p1_data$transcript
protein2[i] <- p2_data$transcript
}
#Create dataframe needed for ggplot
data1 <- data.frame(cbind(x_data, protein1))
colnames(data1) <- c('strengths','values')
data2 <- data.frame(cbind(x_data, protein2))
colnames(data2) <- c('strengths','values')
#Create and save plot
rnase_line_plot <- ggplot() + geom_point(aes(x=data1$strengths, y=data1$values), stat='identity', color='#56B4E9') + geom_point(aes(x=data2$strengths, y=data2$values), stat='identity', color='#E69F00') + geom_line(aes(x=data1$strengths, y=data1$values), size=1, stat='identity', color='#56B4E9') + geom_line(aes(x=data2$strengths, y=data2$values), size=1, stat='identity', color='#E69F00') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("RNAse Site Strength") + ylab("Protein Transcript Abundances") + ggtitle("Protein Transcript Abundances in relation to RNAse Strengths") + panel_border()
ggsave("../../data/parameter_testing/figures/rnase_abundance_parameters.png", rnase_line_plot)
