setwd("/home/wilkelab/pinetree-toys/three_genes_evolution/")
best_file <- list.files("/home/wilkelab/pinetree-toys/three_genes_evolution/", pattern="best_replicated_gen_")
best_file <- mixedsort(sort(best_file))
original_data <- read.table("three_genes_test_file.tsv", header=TRUE)
original_data <- filter(original_data, species == "proteinX" | species == "proteinY" | species == "proteinZ")
original_line_plot <-  ggplot(original_data, aes(fill=species, color=species, x=time, y=transcript)) + geom_line(stat="identity") + ggtitle("Original Genome Function")
gen0_data <- read.table("gen_0_data.tsv", header=TRUE)
gen0_data <- filter(gen0_data, species == "proteinX" | species == "proteinY" | species == "proteinZ")
gen0_line_plot <-  ggplot(gen0_data, aes(fill=species, color=species, x=time, y=transcript)) + geom_line(stat="identity") + ggtitle("Genome Function at Generation 0")
gen500_data <- read.table("gen_500_data.tsv", header=TRUE)
gen500_data <- filter(gen500_data, species == "proteinX" | species == "proteinY" | species == "proteinZ")
gen500_line_plot <-  ggplot(gen500_data, aes(fill=species, color=species, x=time, y=transcript)) + geom_line(stat="identity") + ggtitle("Genome Function at Generation 500")
gen1000_data <- read.table("gen_1000_data.tsv", header=TRUE)
gen1000_data <- filter(gen1000_data, species == "proteinX" | species == "proteinY" | species == "proteinZ")
gen1000_line_plot <-  ggplot(gen1000_data, aes(fill=species, color=species, x=time, y=transcript)) + geom_line(stat="identity") + ggtitle("Genome Function at Generation 1000")
final_data <- last(best_file)
gen_final1_data <- read.table(final_data, header=TRUE)
gen_final1_data <- filter(gen_final1_data, species == "proteinX" | species == "proteinY" | species == "proteinZ")
gen_final1_line_plot <-  ggplot(gen_final1_data, aes(fill=species, color=species, x=time, y=transcript)) + geom_line(stat="identity") + ggtitle("Genome Function of Best Genome Found")
gen_plots <- grid.arrange(original_line_plot, gen0_line_plot, gen500_line_plot, gen1000_line_plot, gen_final1_line_plot, nrow=2, ncol=3, top="Generational Pattern of Gene Transcripts")
ggsave("/home/wilkelab/pinetree-toys/three_genes_evolution/gen_graphs.pdf", gen_plots, width=20, height=10)
library(cowplot)
library(dplyr)
library(gridExtra)
library(ggplot2)
library(gtools)
setwd("/home/wilkelab/pinetree-toys/three_genes_evolution/")
best_files <- list.files("/home/wilkelab/pinetree-toys/three_genes_evolution/", pattern="best_replicated_gen_")
best_files <- mixedsort(sort(best_files))
plots_list <- list()
target_data <- read.table("three_genes_test_file.tsv", header=TRUE)
target_data <- filter(original_data, species == "proteinX" | species == "proteinY" | species == "proteinZ")
target_line_plot <-  ggplot(original_data, aes(fill=species, color=species, x=time, y=transcript)) + geom_line(stat="identity") + ggtitle("Original Genome Function")
for(i in 1:length(best_files)){
best <- "best"
best_plot <- "best_plot"
evolution_title <- "Genome Evolution "
plot_title <- paste(evolution_title, i, sep="")
file_name <- assign(paste(best, i, sep=""), read.table(best_files[i], header=TRUE))
file_name <- filter(file_name, species == "proteinX" | species == "proteinY" | species == "proteinZ")
plot_name <- assign(paste(best_plot, i, sep=""), ggplot(file_name, aes(fill=species, color=species, x=time, y=transcript)) +       geom_line(stat="identity") + ggtitle(plot_title))
plots_list[i] <- plot_name
}
#evo_plot <- grid.arrange(grobs=plots_list, nrow=ceiling(length(best_files) / 2), ncol=ceiling(length(best_files) / 2), top="Evolutionary Pattern of Gene Transcripts")
evo_plot <- grid.arrange(target_line_plot, best_plot1, best_plot2, best_plot3, best_plot4, best_plot5, best_plot6, best_plot7, best_plot8, best_plot9, nrow=ceiling(length(best_files) / 3), ncol=ceiling(length(best_files) / 3), top="Evolutionary Pattern of Gene Transcripts")
knitr::opts_chunk$set(echo = TRUE)
library(cowplot)
library(dplyr)
library(gridExtra)
library(ggplot2)
setwd("/home/wilkelab/pinetree-toys/three_genes_evolution/")
sos_data <- read.table("sos_data.tsv", header=TRUE)
generation_data <- read.table("sos_iter_data.tsv", header=TRUE)
sos_data <- cbind(sos_data, generation_data)
sos_line_plot <- ggplot(sos_data, aes(x=Iteration, y=Sum_of_Squares)) + geom_point(stat="identity") + geom_line(stat="identity") + ggtitle("Evolution of Sum of Squares")
all_sos_data <- read.table("all_sos_data.tsv", header=TRUE)
all_sos_data$ID <- seq.int(nrow(all_sos_data))
all_sos_line_plot <- ggplot(all_sos_data, aes(x=ID, y=Sum_of_Squares)) + geom_point(stat="identity") + geom_line(stat="identity") + ggtitle("All Sum of Squares Values")
sos_plots <- grid.arrange(sos_line_plot, all_sos_line_plot, nrow=2, top="Sum of Squares Data")
ggsave("/home/wilkelab/pinetree-toys/three_genes_evolution/sos_graphs.pdf", sos_plots, width=20, height=10)
library(cowplot)
library(dplyr)
library(gridExtra)
library(ggplot2)
library(gtools)
setwd("/home/wilkelab/pinetree-toys/three_genes_evolution/")
best_file <- list.files("/home/wilkelab/pinetree-toys/three_genes_evolution/", pattern="best_replicated_gen_")
best_file <- mixedsort(sort(best_file))
original_data <- read.table("three_genes_test_file.tsv", header=TRUE)
original_data <- filter(original_data, species == "proteinX" | species == "proteinY" | species == "proteinZ")
original_line_plot <-  ggplot(original_data, aes(fill=species, color=species, x=time, y=transcript)) + geom_line(stat="identity") + ggtitle("Original Genome Function")
gen0_data <- read.table("gen_0_data.tsv", header=TRUE)
gen0_data <- filter(gen0_data, species == "proteinX" | species == "proteinY" | species == "proteinZ")
gen0_line_plot <-  ggplot(gen0_data, aes(fill=species, color=species, x=time, y=transcript)) + geom_line(stat="identity") + ggtitle("Genome Function at Generation 0")
gen500_data <- read.table("gen_500_data.tsv", header=TRUE)
gen500_data <- filter(gen500_data, species == "proteinX" | species == "proteinY" | species == "proteinZ")
gen500_line_plot <-  ggplot(gen500_data, aes(fill=species, color=species, x=time, y=transcript)) + geom_line(stat="identity") + ggtitle("Genome Function at Generation 500")
gen1000_data <- read.table("gen_1000_data.tsv", header=TRUE)
gen1000_data <- filter(gen1000_data, species == "proteinX" | species == "proteinY" | species == "proteinZ")
gen1000_line_plot <-  ggplot(gen1000_data, aes(fill=species, color=species, x=time, y=transcript)) + geom_line(stat="identity") + ggtitle("Genome Function at Generation 1000")
final_data <- last(best_file)
gen_final1_data <- read.table(final_data, header=TRUE)
gen_final1_data <- filter(gen_final1_data, species == "proteinX" | species == "proteinY" | species == "proteinZ")
gen_final1_line_plot <-  ggplot(gen_final1_data, aes(fill=species, color=species, x=time, y=transcript)) + geom_line(stat="identity") + ggtitle("Genome Function of Best Genome Found")
gen_plots <- grid.arrange(original_line_plot, gen0_line_plot, gen500_line_plot, gen1000_line_plot, gen_final1_line_plot, nrow=2, ncol=3, top="Generational Pattern of Gene Transcripts")
ggsave("/home/wilkelab/pinetree-toys/three_genes_evolution/gen_graphs.pdf", gen_plots, width=20, height=10)
library(cowplot)
library(dplyr)
library(gridExtra)
library(ggplot2)
library(gtools)
setwd("/home/wilkelab/pinetree-toys/three_genes_evolution/")
best_files <- list.files("/home/wilkelab/pinetree-toys/three_genes_evolution/", pattern="best_replicated_gen_")
best_files <- mixedsort(sort(best_files))
plots_list <- list()
target_data <- read.table("three_genes_test_file.tsv", header=TRUE)
target_data <- filter(original_data, species == "proteinX" | species == "proteinY" | species == "proteinZ")
target_line_plot <-  ggplot(original_data, aes(fill=species, color=species, x=time, y=transcript)) + geom_line(stat="identity") + ggtitle("Original Genome Function")
for(i in 1:length(best_files)){
best <- "best"
best_plot <- "best_plot"
evolution_title <- "Genome Evolution "
plot_title <- paste(evolution_title, i, sep="")
file_name <- assign(paste(best, i, sep=""), read.table(best_files[i], header=TRUE))
file_name <- filter(file_name, species == "proteinX" | species == "proteinY" | species == "proteinZ")
plot_name <- assign(paste(best_plot, i, sep=""), ggplot(file_name, aes(fill=species, color=species, x=time, y=transcript)) +       geom_line(stat="identity") + ggtitle(plot_title))
plots_list[i] <- plot_name
}
#evo_plot <- grid.arrange(grobs=plots_list, nrow=ceiling(length(best_files) / 2), ncol=ceiling(length(best_files) / 2), top="Evolutionary Pattern of Gene Transcripts")
evo_plot <- grid.arrange(target_line_plot, best_plot1, best_plot2, best_plot3, best_plot4, best_plot5, best_plot6, best_plot7, best_plot8, best_plot9, nrow=ceiling(length(best_files) / 4), ncol=ceiling(length(best_files) / 4), top="Evolutionary Pattern of Gene Transcripts")
knitr::opts_chunk$set(echo = TRUE)
library(cowplot)
library(dplyr)
library(gridExtra)
library(ggplot2)
setwd("/home/wilkelab/pinetree-toys/three_genes_evolution/")
sos_data <- read.table("sos_data.tsv", header=TRUE)
generation_data <- read.table("sos_iter_data.tsv", header=TRUE)
sos_data <- cbind(sos_data, generation_data)
sos_line_plot <- ggplot(sos_data, aes(x=Iteration, y=Sum_of_Squares)) + geom_point(stat="identity") + geom_line(stat="identity") + ggtitle("Evolution of Sum of Squares")
all_sos_data <- read.table("all_sos_data.tsv", header=TRUE)
all_sos_data$ID <- seq.int(nrow(all_sos_data))
all_sos_line_plot <- ggplot(all_sos_data, aes(x=ID, y=Sum_of_Squares)) + geom_point(stat="identity") + geom_line(stat="identity") + ggtitle("All Sum of Squares Values")
sos_plots <- grid.arrange(sos_line_plot, all_sos_line_plot, nrow=2, top="Sum of Squares Data")
ggsave("/home/wilkelab/pinetree-toys/three_genes_evolution/sos_graphs.pdf", sos_plots, width=20, height=10)
library(cowplot)
library(dplyr)
library(gridExtra)
library(ggplot2)
library(gtools)
setwd("/home/wilkelab/pinetree-toys/three_genes_evolution/")
best_file <- list.files("/home/wilkelab/pinetree-toys/three_genes_evolution/", pattern="best_replicated_gen_")
best_file <- mixedsort(sort(best_file))
original_data <- read.table("three_genes_test_file.tsv", header=TRUE)
original_data <- filter(original_data, species == "proteinX" | species == "proteinY" | species == "proteinZ")
original_line_plot <-  ggplot(original_data, aes(fill=species, color=species, x=time, y=transcript)) + geom_line(stat="identity") + ggtitle("Original Genome Function")
gen0_data <- read.table("gen_0_data.tsv", header=TRUE)
gen0_data <- filter(gen0_data, species == "proteinX" | species == "proteinY" | species == "proteinZ")
gen0_line_plot <-  ggplot(gen0_data, aes(fill=species, color=species, x=time, y=transcript)) + geom_line(stat="identity") + ggtitle("Genome Function at Generation 0")
gen500_data <- read.table("gen_500_data.tsv", header=TRUE)
gen500_data <- filter(gen500_data, species == "proteinX" | species == "proteinY" | species == "proteinZ")
gen500_line_plot <-  ggplot(gen500_data, aes(fill=species, color=species, x=time, y=transcript)) + geom_line(stat="identity") + ggtitle("Genome Function at Generation 500")
gen1000_data <- read.table("gen_1000_data.tsv", header=TRUE)
gen1000_data <- filter(gen1000_data, species == "proteinX" | species == "proteinY" | species == "proteinZ")
gen1000_line_plot <-  ggplot(gen1000_data, aes(fill=species, color=species, x=time, y=transcript)) + geom_line(stat="identity") + ggtitle("Genome Function at Generation 1000")
final_data <- last(best_file)
gen_final1_data <- read.table(final_data, header=TRUE)
gen_final1_data <- filter(gen_final1_data, species == "proteinX" | species == "proteinY" | species == "proteinZ")
gen_final1_line_plot <-  ggplot(gen_final1_data, aes(fill=species, color=species, x=time, y=transcript)) + geom_line(stat="identity") + ggtitle("Genome Function of Best Genome Found")
gen_plots <- grid.arrange(original_line_plot, gen0_line_plot, gen500_line_plot, gen1000_line_plot, gen_final1_line_plot, nrow=2, ncol=3, top="Generational Pattern of Gene Transcripts")
ggsave("/home/wilkelab/pinetree-toys/three_genes_evolution/gen_graphs.pdf", gen_plots, width=20, height=10)
library(cowplot)
library(dplyr)
library(gridExtra)
library(ggplot2)
library(gtools)
setwd("/home/wilkelab/pinetree-toys/three_genes_evolution/")
best_files <- list.files("/home/wilkelab/pinetree-toys/three_genes_evolution/", pattern="best_replicated_gen_")
best_files <- mixedsort(sort(best_files))
plots_list <- list()
target_data <- read.table("three_genes_test_file.tsv", header=TRUE)
target_data <- filter(original_data, species == "proteinX" | species == "proteinY" | species == "proteinZ")
target_line_plot <-  ggplot(original_data, aes(fill=species, color=species, x=time, y=transcript)) + geom_line(stat="identity") + ggtitle("Original Genome Function")
for(i in 1:length(best_files)){
best <- "best"
best_plot <- "best_plot"
evolution_title <- "Genome Evolution "
plot_title <- paste(evolution_title, i, sep="")
file_name <- assign(paste(best, i, sep=""), read.table(best_files[i], header=TRUE))
file_name <- filter(file_name, species == "proteinX" | species == "proteinY" | species == "proteinZ")
plot_name <- assign(paste(best_plot, i, sep=""), ggplot(file_name, aes(fill=species, color=species, x=time, y=transcript)) +       geom_line(stat="identity") + ggtitle(plot_title))
plots_list[i] <- plot_name
}
#evo_plot <- grid.arrange(grobs=plots_list, nrow=ceiling(length(best_files) / 2), ncol=ceiling(length(best_files) / 2), top="Evolutionary Pattern of Gene Transcripts")
evo_plot <- grid.arrange(target_line_plot, best_plot1, best_plot2, best_plot3, best_plot4, best_plot5, best_plot6, best_plot7, best_plot8, best_plot9, nrow=ceiling(length(best_files) / 2), ncol=ceiling(length(best_files) / 2), top="Evolutionary Pattern of Gene Transcripts")
ggsave("/home/wilkelab/pinetree-toys/three_genes_evolution/evolution_graphs.pdf", evo_plot, width=30, height=30, limitsize=FALSE)
setwd("/home/wilkelab/pinetree-toys/three_genes_evolution/genome_coordinates/best_genome")
gene1 <- read.table("gene1_data.tsv", header=TRUE)
gene2 <- read.table("gene2_data.tsv", header=TRUE)
gene3 <- read.table("gene3_data.tsv", header=TRUE)
promoter1 <- read.table("promoter1_data.tsv", header=TRUE)
promoter2 <- read.table("promoter2_data.tsv", header=TRUE)
terminator1 <- read.table("term1_data.tsv", header=TRUE)
terminator2 <- read.table("term2_data.tsv", header=TRUE)
terminator3 <- read.table("term3_data.tsv", header=TRUE)
plot.new()
if(promoter1[1, 1] > 0){
draw_prom1 <- geom_segment(mapping=aes(x=20, y=2, xend=20, yend=2.5), arrow = arrow(length = unit(0.5, "cm")))
} else {
draw_prom1 <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if(promoter2[1, 1] > 0){
draw_prom2 <- geom_segment(mapping=aes(x=40, y=2, xend=40, yend=2.5), arrow = arrow(length = unit(0.5, "cm")))
} else {
draw_prom2 <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if(terminator1[1, 1] > 0){
draw_term1 <- geom_segment(mapping=aes(x=10, y=2, xend=10, yend=2.25)) + geom_segment(mapping=aes(x=7, y=2.25, xend=13, yend=2.25))
} else {
draw_term1 <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if(terminator2[1, 1] > 0){
draw_term2 <- geom_segment(mapping=aes(x=30, y=2, xend=30, yend=2.25)) + geom_segment(mapping=aes(x=27, y=2.25, xend=33, yend=2.25))
} else {
draw_term2 <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if(terminator3[1, 1] > 0){
draw_term3 <- geom_segment(mapping=aes(x=50, y=2, xend=50, yend=2.25)) + geom_segment(mapping=aes(x=47, y=2.25, xend=53, yend=2.25))
} else {
draw_term3 <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
genome_list <- list(draw_prom1, draw_prom2, draw_term1, draw_term2, draw_term3)
ggplot() + geom_rect(data=gene1, mapping=aes(xmin=1, xmax=10, ymin=y1, ymax=y2), color="blue", alpha=0) + geom_rect(data=gene2, mapping=aes(xmin=20, xmax=30, ymin=y1, ymax=y2), color="red", alpha=0) + geom_rect(data=gene3, mapping=aes(xmin=40, xmax=50, ymin=y1, ymax=y2), color="yellow", alpha=0) + geom_segment(mapping=aes(x=1, y=2, xend=1, yend=2.5), col="black") + geom_segment(mapping=aes(x=30, y=1.5, xend=40, yend=1.5)) + geom_segment(mapping=aes(x=10, y=1.5, xend=20, yend=1.5), color="black") + geom_segment(mapping=aes(x=1, y=2.5, xend=3, yend=2.5), color="black", arrow = arrow(length = unit(0.5, "cm"))) + genome_list[1] + genome_list[2] + genome_list[3] + genome_list[4] + genome_list[5]
gene1 <- read.table("gene1_data.tsv", header=TRUE)
gene2 <- read.table("gene2_data.tsv", header=TRUE)
gene3 <- read.table("gene3_data.tsv", header=TRUE)
promoter1 <- read.table("promoter1_data.tsv", header=TRUE)
promoter2 <- read.table("promoter2_data.tsv", header=TRUE)
terminator1 <- read.table("term1_data.tsv", header=TRUE)
terminator2 <- read.table("term2_data.tsv", header=TRUE)
terminator3 <- read.table("term3_data.tsv", header=TRUE)
View(terminator1)
View(terminator2)
View(terminator3)
View(promoter1)
View(promoter2)
ggplot() + geom_rect(data=gene1, mapping=aes(xmin=1, xmax=10, ymin=y1, ymax=y2), fill="blue", alpha=0) + geom_rect(data=gene2, mapping=aes(xmin=20, xmax=30, ymin=y1, ymax=y2), color="red", alpha=0) + geom_rect(data=gene3, mapping=aes(xmin=40, xmax=50, ymin=y1, ymax=y2), color="yellow", alpha=0) + geom_segment(mapping=aes(x=1, y=2, xend=1, yend=2.5), col="black") + geom_segment(mapping=aes(x=30, y=1.5, xend=40, yend=1.5)) + geom_segment(mapping=aes(x=10, y=1.5, xend=20, yend=1.5), color="black") + geom_segment(mapping=aes(x=1, y=2.5, xend=3, yend=2.5), color="black", arrow = arrow(length = unit(0.5, "cm"))) + genome_list[1] + genome_list[2] + genome_list[3] + genome_list[4] + genome_list[5]
setwd("/home/wilkelab/pinetree-toys/three_genes_evolution/genome_coordinates/best_genome")
gene1 <- read.table("gene1_data.tsv", header=TRUE)
gene2 <- read.table("gene2_data.tsv", header=TRUE)
gene3 <- read.table("gene3_data.tsv", header=TRUE)
promoter1 <- read.table("promoter1_data.tsv", header=TRUE)
promoter2 <- read.table("promoter2_data.tsv", header=TRUE)
terminator1 <- read.table("term1_data.tsv", header=TRUE)
terminator2 <- read.table("term2_data.tsv", header=TRUE)
terminator3 <- read.table("term3_data.tsv", header=TRUE)
rnase1 <- read.table("rnase1_data.tsv", header=TRUE)
rnase2 <- read.table("rnase2_data.tsv", header=TRUE)
rnase3 <- read.table("rnase3_data.tsv", header=TRUE)
plot.new()
if(promoter1[1, 1] > 0){
draw_prom1 <- geom_segment(mapping=aes(x=20, y=2, xend=20, yend=2.5), arrow = arrow(length = unit(0.5, "cm")))
} else {
draw_prom1 <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if(promoter2[1, 1] > 0){
draw_prom2 <- geom_segment(mapping=aes(x=40, y=2, xend=40, yend=2.5), arrow = arrow(length = unit(0.5, "cm")))
} else {
draw_prom2 <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if(terminator1[1, 1] > 0){
draw_term1 <- geom_segment(mapping=aes(x=10, y=2, xend=10, yend=2.25)) + geom_segment(mapping=aes(x=7, y=2.25, xend=13, yend=2.25))
} else {
draw_term1 <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if(terminator2[1, 1] > 0){
draw_term2 <- geom_segment(mapping=aes(x=30, y=2, xend=30, yend=2.25)) + geom_segment(mapping=aes(x=27, y=2.25, xend=33, yend=2.25))
} else {
draw_term2 <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if(terminator3[1, 1] > 0){
draw_term3 <- geom_segment(mapping=aes(x=50, y=2, xend=50, yend=2.25)) + geom_segment(mapping=aes(x=47, y=2.25, xend=53, yend=2.25))
} else {
draw_term3 <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
genome_list <- list(draw_prom1, draw_prom2, draw_term1, draw_term2, draw_term3)
ggplot() + geom_rect(data=gene1, mapping=aes(xmin=1, xmax=10, ymin=y1, ymax=y2), fill="blue", alpha=0) + geom_rect(data=gene2, mapping=aes(xmin=20, xmax=30, ymin=y1, ymax=y2), color="red", alpha=0) + geom_rect(data=gene3, mapping=aes(xmin=40, xmax=50, ymin=y1, ymax=y2), color="yellow", alpha=0) + geom_segment(mapping=aes(x=1, y=2, xend=1, yend=2.5), col="black") + geom_segment(mapping=aes(x=30, y=1.5, xend=40, yend=1.5)) + geom_segment(mapping=aes(x=10, y=1.5, xend=20, yend=1.5), color="black") + geom_segment(mapping=aes(x=1, y=2.5, xend=3, yend=2.5), color="black", arrow = arrow(length = unit(0.5, "cm"))) + genome_list[1] + genome_list[2] + genome_list[3] + genome_list[4] + genome_list[5]
y1 <- 1
y2 <- 2
genome_list <- list(draw_prom1, draw_prom2, draw_term1, draw_term2, draw_term3)
ggplot() + geom_rect(data=gene1, mapping=aes(xmin=1, xmax=10, ymin=y1, ymax=y2), fill="blue", alpha=0) + geom_rect(data=gene2, mapping=aes(xmin=20, xmax=30, ymin=y1, ymax=y2), color="red", alpha=0) + geom_rect(data=gene3, mapping=aes(xmin=40, xmax=50, ymin=y1, ymax=y2), color="yellow", alpha=0) + geom_segment(mapping=aes(x=1, y=2, xend=1, yend=2.5), col="black") + geom_segment(mapping=aes(x=30, y=1.5, xend=40, yend=1.5)) + geom_segment(mapping=aes(x=10, y=1.5, xend=20, yend=1.5), color="black") + geom_segment(mapping=aes(x=1, y=2.5, xend=3, yend=2.5), color="black", arrow = arrow(length = unit(0.5, "cm"))) + genome_list[1] + genome_list[2] + genome_list[3] + genome_list[4] + genome_list[5]
ggplot() + geom_rect(data=gene1, mapping=aes(xmin=1, xmax=10, ymin=y1, ymax=y2), fill="blue20", alpha=0) + geom_rect(data=gene2, mapping=aes(xmin=20, xmax=30, ymin=y1, ymax=y2), color="red", alpha=0) + geom_rect(data=gene3, mapping=aes(xmin=40, xmax=50, ymin=y1, ymax=y2), color="yellow", alpha=0) + geom_segment(mapping=aes(x=1, y=2, xend=1, yend=2.5), col="black") + geom_segment(mapping=aes(x=30, y=1.5, xend=40, yend=1.5)) + geom_segment(mapping=aes(x=10, y=1.5, xend=20, yend=1.5), color="black") + geom_segment(mapping=aes(x=1, y=2.5, xend=3, yend=2.5), color="black", arrow = arrow(length = unit(0.5, "cm"))) + genome_list[1] + genome_list[2] + genome_list[3] + genome_list[4] + genome_list[5]
ggplot() + geom_rect(data=gene1, mapping=aes(xmin=1, xmax=10, ymin=y1, ymax=y2), fill="blue", alpha=0.5) + geom_rect(data=gene2, mapping=aes(xmin=20, xmax=30, ymin=y1, ymax=y2), color="red", alpha=0) + geom_rect(data=gene3, mapping=aes(xmin=40, xmax=50, ymin=y1, ymax=y2), color="yellow", alpha=0) + geom_segment(mapping=aes(x=1, y=2, xend=1, yend=2.5), col="black") + geom_segment(mapping=aes(x=30, y=1.5, xend=40, yend=1.5)) + geom_segment(mapping=aes(x=10, y=1.5, xend=20, yend=1.5), color="black") + geom_segment(mapping=aes(x=1, y=2.5, xend=3, yend=2.5), color="black", arrow = arrow(length = unit(0.5, "cm"))) + genome_list[1] + genome_list[2] + genome_list[3] + genome_list[4] + genome_list[5]
ggplot() + geom_rect(data=gene1, mapping=aes(xmin=1, xmax=10, ymin=y1, ymax=y2), fill="blue", alpha=0.5) + geom_rect(data=gene2, mapping=aes(xmin=20, xmax=30, ymin=y1, ymax=y2), fill="red", alpha=0.5) + geom_rect(data=gene3, mapping=aes(xmin=40, xmax=50, ymin=y1, ymax=y2), fill="yellow", alpha=0.5) + geom_segment(mapping=aes(x=1, y=2, xend=1, yend=2.5), col="black") + geom_segment(mapping=aes(x=30, y=1.5, xend=40, yend=1.5)) + geom_segment(mapping=aes(x=10, y=1.5, xend=20, yend=1.5), color="black") + geom_segment(mapping=aes(x=1, y=2.5, xend=3, yend=2.5), color="black", arrow = arrow(length = unit(0.5, "cm"))) + genome_list[1] + genome_list[2] + genome_list[3] + genome_list[4] + genome_list[5]
View(rnase3)
View(rnase2)
View(rnase1)
View(rnase2)
y1 <- 1
y2 <- 2
plot.new()
if(promoter1[1, 1] > 0){
draw_prom1 <- geom_segment(mapping=aes(x=20, y=2, xend=20, yend=2.5), arrow = arrow(length = unit(0.5, "cm")))
} else {
draw_prom1 <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if(promoter2[1, 1] > 0){
draw_prom2 <- geom_segment(mapping=aes(x=40, y=2, xend=40, yend=2.5), arrow = arrow(length = unit(0.5, "cm")))
} else {
draw_prom2 <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if(terminator1[1, 1] > 0){
draw_term1 <- geom_segment(mapping=aes(x=10, y=2, xend=10, yend=2.25)) + geom_segment(mapping=aes(x=7, y=2.25, xend=13, yend=2.25))
} else {
draw_term1 <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if(terminator2[1, 1] > 0){
draw_term2 <- geom_segment(mapping=aes(x=30, y=2, xend=30, yend=2.25)) + geom_segment(mapping=aes(x=27, y=2.25, xend=33, yend=2.25))
} else {
draw_term2 <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if(terminator3[1, 1] > 0){
draw_term3 <- geom_segment(mapping=aes(x=50, y=2, xend=50, yend=2.25)) + geom_segment(mapping=aes(x=47, y=2.25, xend=53, yend=2.25))
} else {
draw_term3 <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if(rnase2[1, 1] >= 144 && rnase2[1, 2] <= 159){
draw_rnase2 <- geom_segment(mapping=aes(x=16, y=1.7, xend=20, yend=1.3)) + geom_segment(mapping=aes(x=20, y=1.7, xend=16, yend=1.3))
} else {
draw_rnase2 <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
genome_list <- list(draw_prom1, draw_prom2, draw_term1, draw_term2, draw_term3, draw_rnase2)
ggplot() + geom_rect(data=gene1, mapping=aes(xmin=1, xmax=10, ymin=y1, ymax=y2), fill="blue", alpha=0.5) + geom_rect(data=gene2, mapping=aes(xmin=20, xmax=30, ymin=y1, ymax=y2), fill="red", alpha=0.5) + geom_rect(data=gene3, mapping=aes(xmin=40, xmax=50, ymin=y1, ymax=y2), fill="yellow", alpha=0.5) + geom_segment(mapping=aes(x=1, y=2, xend=1, yend=2.5), col="black") + geom_segment(mapping=aes(x=30, y=1.5, xend=40, yend=1.5)) + geom_segment(mapping=aes(x=10, y=1.5, xend=20, yend=1.5), color="black") + geom_segment(mapping=aes(x=1, y=2.5, xend=3, yend=2.5), color="black", arrow = arrow(length = unit(0.5, "cm"))) + genome_list[1] + genome_list[2] + genome_list[3] + genome_list[4] + genome_list[5] + genome_list[6]
if(rnase2[1, 1] >= 144 && rnase2[1, 2] <= 159){
draw_rnase2 <- geom_segment(mapping=aes(x=16, y=1.7, xend=20, yend=1.3)) + geom_segment(mapping=aes(x=20, y=1.7, xend=16, yend=1.3))
} else {
draw_rnase2 <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if(rnase2[1, 1] >= 144 && rnase2[1, 2] <= 159 == TRUE){
draw_rnase2 <- geom_segment(mapping=aes(x=16, y=1.7, xend=20, yend=1.3)) + geom_segment(mapping=aes(x=20, y=1.7, xend=16, yend=1.3))
} else {
draw_rnase2 <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if((rnase2[1, 1] >= 144 && rnase2[1, 2] <= 159) == TRUE){
draw_rnase2 <- geom_segment(mapping=aes(x=16, y=1.7, xend=20, yend=1.3)) + geom_segment(mapping=aes(x=20, y=1.7, xend=16, yend=1.3))
} else {
draw_rnase2 <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if(rnase2[1, 1] >= 144 == TRUE && rnase2[1, 2] <= 159 == TRUE){
draw_rnase2 <- geom_segment(mapping=aes(x=16, y=1.7, xend=20, yend=1.3)) + geom_segment(mapping=aes(x=20, y=1.7, xend=16, yend=1.3))
} else {
draw_rnase2 <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if(rnase2[1, 1] >= 144 == TRUE & rnase2[1, 2] <= 159 == TRUE){
draw_rnase2 <- geom_segment(mapping=aes(x=16, y=1.7, xend=20, yend=1.3)) + geom_segment(mapping=aes(x=20, y=1.7, xend=16, yend=1.3))
} else {
draw_rnase2 <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if((rnase2[1, 1] >= 144) & (rnase2[1, 2] <= 159)){
draw_rnase2 <- geom_segment(mapping=aes(x=16, y=1.7, xend=20, yend=1.3)) + geom_segment(mapping=aes(x=20, y=1.7, xend=16, yend=1.3))
} else {
draw_rnase2 <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if((rnase2[1, 1] >= 144) & (rnase2[2, 1] <= 159)){
draw_rnase2 <- geom_segment(mapping=aes(x=16, y=1.7, xend=20, yend=1.3)) + geom_segment(mapping=aes(x=20, y=1.7, xend=16, yend=1.3))
} else {
draw_rnase2 <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
genome_list <- list(draw_prom1, draw_prom2, draw_term1, draw_term2, draw_term3, draw_rnase2)
ggplot() + geom_rect(data=gene1, mapping=aes(xmin=1, xmax=10, ymin=y1, ymax=y2), fill="blue", alpha=0.5) + geom_rect(data=gene2, mapping=aes(xmin=20, xmax=30, ymin=y1, ymax=y2), fill="red", alpha=0.5) + geom_rect(data=gene3, mapping=aes(xmin=40, xmax=50, ymin=y1, ymax=y2), fill="yellow", alpha=0.5) + geom_segment(mapping=aes(x=1, y=2, xend=1, yend=2.5), col="black") + geom_segment(mapping=aes(x=30, y=1.5, xend=40, yend=1.5)) + geom_segment(mapping=aes(x=10, y=1.5, xend=20, yend=1.5), color="black") + geom_segment(mapping=aes(x=1, y=2.5, xend=3, yend=2.5), color="black", arrow = arrow(length = unit(0.5, "cm"))) + genome_list[1] + genome_list[2] + genome_list[3] + genome_list[4] + genome_list[5] + genome_list[6]
if((rnase2[1, 1] >= 144) & (rnase2[2, 1] <= 159)){
draw_rnase2 <- geom_segment(mapping=aes(x=16, y=1.7, xend=20, yend=1.3)) + geom_segment(mapping=aes(x=20, y=1.7, xend=16, yend=1.3))
} else {
draw_rnase2 <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if((rnase2[1, 1] >= 144) & (rnase2[2, 1] <= 159)){
draw_rnase2 <- ggplot() + geom_segment(mapping=aes(x=16, y=1.7, xend=20, yend=1.3)) + geom_segment(mapping=aes(x=20, y=1.7, xend=16, yend=1.3))
} else {
draw_rnase2 <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
genome_list <- list(draw_prom1, draw_prom2, draw_term1, draw_term2, draw_term3, draw_rnase2)
ggplot() + geom_rect(data=gene1, mapping=aes(xmin=1, xmax=10, ymin=y1, ymax=y2), fill="blue", alpha=0.5) + geom_rect(data=gene2, mapping=aes(xmin=20, xmax=30, ymin=y1, ymax=y2), fill="red", alpha=0.5) + geom_rect(data=gene3, mapping=aes(xmin=40, xmax=50, ymin=y1, ymax=y2), fill="yellow", alpha=0.5) + geom_segment(mapping=aes(x=1, y=2, xend=1, yend=2.5), col="black") + geom_segment(mapping=aes(x=30, y=1.5, xend=40, yend=1.5)) + geom_segment(mapping=aes(x=10, y=1.5, xend=20, yend=1.5), color="black") + geom_segment(mapping=aes(x=1, y=2.5, xend=3, yend=2.5), color="black", arrow = arrow(length = unit(0.5, "cm"))) + genome_list[1] + genome_list[2] + genome_list[3] + genome_list[4] + genome_list[5] + genome_list[6]
if((rnase2[1, 1] >= 144) & (rnase2[2, 1] <= 159)){
draw_rnase2 <- ggplot() + geom_segment(mapping=aes(x=16, y=1.7, xend=20, yend=1.3)) + geom_segment(mapping=aes(x=20, y=1.7, xend=16, yend=1.3))
} else {
draw_rnase2 <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
genome_list <- list(draw_prom1, draw_prom2, draw_term1, draw_term2, draw_term3, draw_rnase2)
ggplot() + geom_rect(data=gene1, mapping=aes(xmin=1, xmax=10, ymin=y1, ymax=y2), fill="blue", alpha=0.5) + geom_rect(data=gene2, mapping=aes(xmin=20, xmax=30, ymin=y1, ymax=y2), fill="red", alpha=0.5) + geom_rect(data=gene3, mapping=aes(xmin=40, xmax=50, ymin=y1, ymax=y2), fill="yellow", alpha=0.5) + geom_segment(mapping=aes(x=1, y=2, xend=1, yend=2.5), col="black") + geom_segment(mapping=aes(x=30, y=1.5, xend=40, yend=1.5)) + geom_segment(mapping=aes(x=10, y=1.5, xend=20, yend=1.5), color="black") + geom_segment(mapping=aes(x=1, y=2.5, xend=3, yend=2.5), color="black", arrow = arrow(length = unit(0.5, "cm"))) + genome_list[1] + genome_list[2] + genome_list[3] + genome_list[4] + genome_list[5] + genome_list[6]
if((rnase2[1, 1] >= 144) & (rnase2[2, 1] <= 159)){
draw1_rnase2c <- geom_segment(mapping=aes(x=16, y=1.7, xend=20, yend=1.3))
draw2_rnase2c <- geom_segment(mapping=aes(x=20, y=1.7, xend=16, yend=1.3))
} else {
draw1_rnase2c <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
draw2_rnase2c <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
genome_list <- list(draw_prom1, draw_prom2, draw_term1, draw_term2, draw_term3, draw1_rnase2c, draw2_rnase2c)
ggplot() + geom_rect(data=gene1, mapping=aes(xmin=1, xmax=10, ymin=y1, ymax=y2), fill="blue", alpha=0.5) + geom_rect(data=gene2, mapping=aes(xmin=20, xmax=30, ymin=y1, ymax=y2), fill="red", alpha=0.5) + geom_rect(data=gene3, mapping=aes(xmin=40, xmax=50, ymin=y1, ymax=y2), fill="yellow", alpha=0.5) + geom_segment(mapping=aes(x=1, y=2, xend=1, yend=2.5), col="black") + geom_segment(mapping=aes(x=30, y=1.5, xend=40, yend=1.5)) + geom_segment(mapping=aes(x=10, y=1.5, xend=20, yend=1.5), color="black") + geom_segment(mapping=aes(x=1, y=2.5, xend=3, yend=2.5), color="black", arrow = arrow(length = unit(0.5, "cm"))) + genome_list[1] + genome_list[2] + genome_list[3] + genome_list[4] + genome_list[5] + genome_list[6] + genome_list[7]
knitr::opts_chunk$set(echo = TRUE)
library(cowplot)
library(dplyr)
library(gridExtra)
library(ggplot2)
setwd("/home/wilkelab/pinetree-toys/three_genes_evolution/")
sos_data <- read.table("sos_data.tsv", header=TRUE)
generation_data <- read.table("sos_iter_data.tsv", header=TRUE)
sos_data <- cbind(sos_data, generation_data)
sos_line_plot <- ggplot(sos_data, aes(x=Iteration, y=Sum_of_Squares)) + geom_point(stat="identity") + geom_line(stat="identity") + ggtitle("Evolution of Sum of Squares")
all_sos_data <- read.table("all_sos_data.tsv", header=TRUE)
all_sos_data$ID <- seq.int(nrow(all_sos_data))
all_sos_line_plot <- ggplot(all_sos_data, aes(x=ID, y=Sum_of_Squares)) + geom_point(stat="identity") + geom_line(stat="identity") + ggtitle("All Sum of Squares Values")
sos_plots <- grid.arrange(sos_line_plot, all_sos_line_plot, nrow=2, top="Sum of Squares Data")
ggsave("/home/wilkelab/pinetree-toys/three_genes_evolution/sos_graphs.pdf", sos_plots, width=20, height=10)
library(cowplot)
library(dplyr)
library(gridExtra)
library(ggplot2)
library(gtools)
setwd("/home/wilkelab/pinetree-toys/three_genes_evolution/")
best_file <- list.files("/home/wilkelab/pinetree-toys/three_genes_evolution/", pattern="best_replicated_gen_")
best_file <- mixedsort(sort(best_file))
original_data <- read.table("three_genes_test_file.tsv", header=TRUE)
original_data <- filter(original_data, species == "proteinX" | species == "proteinY" | species == "proteinZ")
original_line_plot <-  ggplot(original_data, aes(fill=species, color=species, x=time, y=transcript)) + geom_line(stat="identity") + ggtitle("Original Genome Function")
gen0_data <- read.table("gen_0_data.tsv", header=TRUE)
gen0_data <- filter(gen0_data, species == "proteinX" | species == "proteinY" | species == "proteinZ")
gen0_line_plot <-  ggplot(gen0_data, aes(fill=species, color=species, x=time, y=transcript)) + geom_line(stat="identity") + ggtitle("Genome Function at Generation 0")
gen500_data <- read.table("gen_500_data.tsv", header=TRUE)
gen500_data <- filter(gen500_data, species == "proteinX" | species == "proteinY" | species == "proteinZ")
gen500_line_plot <-  ggplot(gen500_data, aes(fill=species, color=species, x=time, y=transcript)) + geom_line(stat="identity") + ggtitle("Genome Function at Generation 500")
gen1000_data <- read.table("gen_1000_data.tsv", header=TRUE)
gen1000_data <- filter(gen1000_data, species == "proteinX" | species == "proteinY" | species == "proteinZ")
gen1000_line_plot <-  ggplot(gen1000_data, aes(fill=species, color=species, x=time, y=transcript)) + geom_line(stat="identity") + ggtitle("Genome Function at Generation 1000")
final_data <- last(best_file)
gen_final1_data <- read.table(final_data, header=TRUE)
gen_final1_data <- filter(gen_final1_data, species == "proteinX" | species == "proteinY" | species == "proteinZ")
gen_final1_line_plot <-  ggplot(gen_final1_data, aes(fill=species, color=species, x=time, y=transcript)) + geom_line(stat="identity") + ggtitle("Genome Function of Best Genome Found")
gen_plots <- grid.arrange(original_line_plot, gen0_line_plot, gen500_line_plot, gen1000_line_plot, gen_final1_line_plot, nrow=2, ncol=3, top="Generational Pattern of Gene Transcripts")
ggsave("/home/wilkelab/pinetree-toys/three_genes_evolution/gen_graphs.pdf", gen_plots, width=20, height=10)
library(cowplot)
library(dplyr)
library(gridExtra)
library(ggplot2)
library(gtools)
setwd("/home/wilkelab/pinetree-toys/three_genes_evolution/")
best_files <- list.files("/home/wilkelab/pinetree-toys/three_genes_evolution/", pattern="best_replicated_gen_")
best_files <- mixedsort(sort(best_files))
plots_list <- list()
target_data <- read.table("three_genes_test_file.tsv", header=TRUE)
target_data <- filter(original_data, species == "proteinX" | species == "proteinY" | species == "proteinZ")
target_line_plot <-  ggplot(original_data, aes(fill=species, color=species, x=time, y=transcript)) + geom_line(stat="identity") + ggtitle("Original Genome Function")
for(i in 1:length(best_files)){
best <- "best"
best_plot <- "best_plot"
evolution_title <- "Genome Evolution "
plot_title <- paste(evolution_title, i, sep="")
file_name <- assign(paste(best, i, sep=""), read.table(best_files[i], header=TRUE))
file_name <- filter(file_name, species == "proteinX" | species == "proteinY" | species == "proteinZ")
plot_name <- assign(paste(best_plot, i, sep=""), ggplot(file_name, aes(fill=species, color=species, x=time, y=transcript)) +       geom_line(stat="identity") + ggtitle(plot_title))
plots_list[i] <- plot_name
}
#evo_plot <- grid.arrange(grobs=plots_list, nrow=ceiling(length(best_files) / 2), ncol=ceiling(length(best_files) / 2), top="Evolutionary Pattern of Gene Transcripts")
evo_plot <- grid.arrange(target_line_plot, best_plot1, best_plot2, best_plot3, best_plot4, best_plot5, best_plot6, nrow=ceiling(length(best_files) / 2), ncol=ceiling(length(best_files) / 2), top="Evolutionary Pattern of Gene Transcripts")
ggsave("/home/wilkelab/pinetree-toys/three_genes_evolution/evolution_graphs.pdf", evo_plot, width=30, height=30, limitsize=FALSE)
gene1 <- read.table("gene1_data.tsv", header=TRUE)
gene2 <- read.table("gene2_data.tsv", header=TRUE)
gene3 <- read.table("gene3_data.tsv", header=TRUE)
promoter1 <- read.table("promoter1_data.tsv", header=TRUE)
promoter2 <- read.table("promoter2_data.tsv", header=TRUE)
terminator1 <- read.table("term1_data.tsv", header=TRUE)
terminator2 <- read.table("term2_data.tsv", header=TRUE)
terminator3 <- read.table("term3_data.tsv", header=TRUE)
rnase1 <- read.table("rnase1_data.tsv", header=TRUE)
rnase2 <- read.table("rnase2_data.tsv", header=TRUE)
rnase3 <- read.table("rnase3_data.tsv", header=TRUE)
gene1 <- read.table("gene1_data.tsv", header=TRUE)
gene2 <- read.table("gene2_data.tsv", header=TRUE)
gene3 <- read.table("gene3_data.tsv", header=TRUE)
promoter1 <- read.table("promoter1_data.tsv", header=TRUE)
promoter2 <- read.table("promoter2_data.tsv", header=TRUE)
terminator1 <- read.table("term1_data.tsv", header=TRUE)
terminator2 <- read.table("term2_data.tsv", header=TRUE)
terminator3 <- read.table("term3_data.tsv", header=TRUE)
rnase1 <- read.table("rnase1_data.tsv", header=TRUE)
rnase2 <- read.table("rnase2_data.tsv", header=TRUE)
rnase3 <- read.table("rnase3_data.tsv", header=TRUE)
View(promoter1)
View(promoter2)
View(rnase2)
View(rnase2)
View(rnase1)
View(rnase3)
View(terminator1)
View(terminator2)
View(terminator3)
y1 <- 1
y2 <- 2
plot.new()
if(promoter1[1, 1] > 0){
draw_prom1 <- geom_segment(mapping=aes(x=20, y=2, xend=20, yend=2.5), arrow = arrow(length = unit(0.5, "cm")))
} else {
draw_prom1 <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if(promoter2[1, 1] > 0){
draw_prom2 <- geom_segment(mapping=aes(x=40, y=2, xend=40, yend=2.5), arrow = arrow(length = unit(0.5, "cm")))
} else {
draw_prom2 <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if((terminator1[1, 1] >= 11) & (terminator1[2, 1] <= 26)){
draw_term1 <- geom_segment(mapping=aes(x=10, y=2, xend=10, yend=2.25)) + geom_segment(mapping=aes(x=7, y=2.25, xend=13, yend=2.25))
} else {
draw_term1 <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if(terminator2[1, 1] > 0){
draw_term2 <- geom_segment(mapping=aes(x=30, y=2, xend=30, yend=2.25)) + geom_segment(mapping=aes(x=27, y=2.25, xend=33, yend=2.25))
} else {
draw_term2 <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if(terminator3[1, 1] > 0){
draw_term3 <- geom_segment(mapping=aes(x=50, y=2, xend=50, yend=2.25)) + geom_segment(mapping=aes(x=47, y=2.25, xend=53, yend=2.25))
} else {
draw_term3 <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if((rnase2[1, 1] >= 144) & (rnase2[2, 1] <= 159)){
draw1_rnase2c <- geom_segment(mapping=aes(x=16, y=1.7, xend=20, yend=1.3))
draw2_rnase2c <- geom_segment(mapping=aes(x=20, y=1.7, xend=16, yend=1.3))
} else {
draw1_rnase2c <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
draw2_rnase2c <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
genome_list <- list(draw_prom1, draw_prom2, draw_term1, draw_term2, draw_term3, draw1_rnase2c, draw2_rnase2c)
ggplot() + geom_rect(data=gene1, mapping=aes(xmin=1, xmax=10, ymin=y1, ymax=y2), fill="blue", alpha=0.5) + geom_rect(data=gene2, mapping=aes(xmin=20, xmax=30, ymin=y1, ymax=y2), fill="red", alpha=0.5) + geom_rect(data=gene3, mapping=aes(xmin=40, xmax=50, ymin=y1, ymax=y2), fill="yellow", alpha=0.5) + geom_segment(mapping=aes(x=1, y=2, xend=1, yend=2.5), col="black") + geom_segment(mapping=aes(x=30, y=1.5, xend=40, yend=1.5)) + geom_segment(mapping=aes(x=10, y=1.5, xend=20, yend=1.5), color="black") + geom_segment(mapping=aes(x=1, y=2.5, xend=3, yend=2.5), color="black", arrow = arrow(length = unit(0.5, "cm"))) + genome_list[1] + genome_list[2] + genome_list[3] + genome_list[4] + genome_list[5] + genome_list[6] + genome_list[7]
