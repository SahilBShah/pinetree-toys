install.packages("readr")
install.packages("dplyr")
library(tidyverse)
install.packages("tidyverse", dependencies = TRUE)
install.packages("curl")
install.packages("crayon")
install.packages("tidyverse")
install.packages("rvest")
install.packages("httr")
install.packages("openssl")
install.packages("cowplot")
install.packages("readr")
install.packages("dplyr")
install.packages("stringr")
install.packages("tidyverse")
conda install -c r r-essentials
conda list
conda
conda
conda list
gen_final1_data <- read.table("best_replicated_gen1.tsv", header=TRUE)
gen_final1_data <- read.table("best_replicated_gen_1.tsv", header=TRUE)
library(cowplot)
library(dplyr)
library(gridExtra)
setwd("/home/wilkelab/pinetree-toys/three_genes_evolution/")
gen_final1_data <- read.table("best_replicated_gen_1.tsv", header=TRUE)
gen_final1_data <- filter(gen_final1_data, species == "proteinX" | species == "proteinY" | species == "proteinZ")
gen_final1_line_plot <-  ggplot(gen_final1_data, aes(fill=species, color=species, x=time, y=transcript)) + geom_point(stat="identity") + geom_line(stat="identity") + ggtitle("Genome Function of Best Genome Found")
gen_final2_data <- read.table("best_replicated_gen_2.tsv", header=TRUE)
gen_final2_data <- filter(gen_final2_data, species == "proteinX" | species == "proteinY" | species == "proteinZ")
gen_final2_line_plot <-  ggplot(gen_final2_data, aes(fill=species, color=species, x=time, y=transcript)) + geom_point(stat="identity") + geom_line(stat="identity") + ggtitle("Genome Function of Best Genome 2 Found")
grid.arrange(gen_final1_line_plot, gen_final2_line_plot)
grid.arrange(original_line_plot, gen_final1_line_plot, gen_final2_line_plot)
original_data <- read.table("three_genes_test_file.tsv", header=TRUE)
original_data <- filter(original_data, species == "proteinX" | species == "proteinY" | species == "proteinZ")
original_line_plot <-  ggplot(original_data, aes(fill=species, color=species, x=time, y=transcript)) + geom_point(stat="identity") + geom_line(stat="identity") + ggtitle("Original Genome Function")
grid.arrange(original_line_plot, gen_final1_line_plot, gen_final2_line_plot)
