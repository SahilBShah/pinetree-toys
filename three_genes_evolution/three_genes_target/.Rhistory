}
if((genome[4, 2] >= 133) & (genome[4, 3] <= 143)){
draw_prom1_r1b <- geom_segment(mapping=aes(x=15, y=1.5, xend=15, yend=2))
draw_prom1_r2b <- geom_segment(mapping=aes(x=15, y=2, xend=16, yend=2), arrow = arrow(length = unit(0.5, "cm")))
} else {
draw_prom1_r1b <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
draw_prom1_r2b <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if((genome[5, 2] >= 281) & genome[5, 3] <= 291){
draw_prom2_r1a <- geom_segment(mapping=aes(x=32, y=1.5, xend=32, yend=2))
draw_prom2_r2a <- geom_segment(mapping=aes(x=32, y=2, xend=33, yend=2), arrow = arrow(length = unit(0.5, "cm")))
} else {
draw_prom2_r1a <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
draw_prom2_r2a <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if((genome[5, 2] >= 292) & genome[5, 3] <= 302){
draw_prom2_r1b <- geom_segment(mapping=aes(x=35, y=1.5, xend=35, yend=2))
draw_prom2_r2b <- geom_segment(mapping=aes(x=35, y=2, xend=36, yend=2), arrow = arrow(length = unit(0.5, "cm")))
} else {
draw_prom2_r1b <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
draw_prom2_r2b <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
#Draw terminators
if((genome[10, 2] >= 122) & (genome[10, 3] <= 132)){
draw_term1_r1a <- geom_segment(mapping=aes(x=12, y=1.5, xend=12, yend=1.75))
draw_term1_r2a <- geom_segment(mapping=aes(x=11, y=1.75, xend=13, yend=1.75))
} else {
draw_term1_r1a <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
draw_term1_r2a <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if((genome[10, 2] >= 133) & (genome[10, 3] <= 143)){
draw_term1_r1b <- geom_segment(mapping=aes(x=15, y=1.5, xend=15, yend=1.75))
draw_term1_r2b <- geom_segment(mapping=aes(x=14, y=1.75, xend=16, yend=1.75))
} else {
draw_term1_r1b <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
draw_term1_r2b <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if((genome[10, 2] >= 144) & (genome[10, 3] <= 159)){
draw_term1_r1c <- geom_segment(mapping=aes(x=18, y=1.5, xend=18, yend=1.75))
draw_term1_r2c <- geom_segment(mapping=aes(x=17, y=1.75, xend=19, yend=1.75))
} else {
draw_term1_r1c <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
draw_term1_r2c <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if((genome[11, 2] >= 281) & (genome[11, 3] <= 291)){
draw_term2_r1a <- geom_segment(mapping=aes(x=32, y=1.5, xend=32, yend=1.75))
draw_term2_r2a <- geom_segment(mapping=aes(x=31, y=1.75, xend=33, yend=1.75))
} else {
draw_term2_r1a <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
draw_term2_r2a <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if((genome[11, 2] >= 292) & (genome[11, 3] <= 302)){
draw_term2_r1b <- geom_segment(mapping=aes(x=35, y=1.5, xend=35, yend=1.75))
draw_term2_r2b <- geom_segment(mapping=aes(x=34, y=1.75, xend=36, yend=1.75))
} else {
draw_term2_r1b <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
draw_term2_r2b <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if((genome[11, 2] >= 303) & (genome[11, 3] <= 318)){
draw_term2_r1c <- geom_segment(mapping=aes(x=38, y=1.5, xend=38, yend=1.75))
draw_term2_r2c <- geom_segment(mapping=aes(x=37, y=1.75, xend=39, yend=1.75))
} else {
draw_term2_r1c <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
draw_term2_r2c <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if(genome[12, 2] > 0){
draw_term3a <- geom_segment(mapping=aes(x=50, y=2, xend=50, yend=2.25))
draw_term3b <- geom_segment(mapping=aes(x=47, y=2.25, xend=53, yend=2.25))
} else {
draw_term3a <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
draw_term3b <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
#Draw rnases (first segment, region a within first rnase placement)
if((genome[7, 2] >= 11) & (genome[7, 3] <= 25)){
draw_rnase1a <- geom_segment(mapping=(aes(x=1, y=2.1, xend=3, yend=2)))
draw_rnase1b <- geom_segment(mapping=(aes(x=3, y=2.1, xend=1, yend=2)))
}else{
draw_rnase1a <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
draw_rnase1b <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if((genome[8, 2] >= 122) & (genome[8, 3] <= 132)){
draw_rnase2_r1a <- geom_segment(mapping=aes(x=11, y=1.7, xend=13, yend=1.3))
draw_rnase2_r2a <- geom_segment(mapping=aes(x=13, y=1.7, xend=11, yend=1.3))
}else{
draw_rnase2_r1a <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
draw_rnase2_r2a <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if((genome[8, 2] >= 133) & (genome[8, 3] <= 143)){
draw_rnase2_r1b <- geom_segment(mapping=aes(x=14, y=1.7, xend=16, yend=1.3))
draw_rnase2_r2b <- geom_segment(mapping=aes(x=16, y=1.7, xend=14, yend=1.3))
}else{
draw_rnase2_r1b <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
draw_rnase2_r2b <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if((genome[8, 2] >= 144) & (genome[8, 3] <= 159)){
draw_rnase2_r1c <- geom_segment(mapping=aes(x=17, y=1.7, xend=19, yend=1.3))
draw_rnase2_r2c <- geom_segment(mapping=aes(x=19, y=1.7, xend=17, yend=1.3))
} else {
draw_rnase2_r1c <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
draw_rnase2_r2c <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if((genome[9, 2] >= 281) & (genome[9, 3] <= 291)){
draw_rnase3_r1a <- geom_segment(mapping=aes(x=31, y=1.7, xend=33, yend=1.3))
draw_rnase3_r2a <- geom_segment(mapping=aes(x=33, y=1.7, xend=31, yend=1.3))
}else{
draw_rnase3_r1a <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
draw_rnase3_r2a <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if((genome[9, 2] >= 292) & (genome[9, 3] <= 302)){
draw_rnase3_r1b <- geom_segment(mapping=aes(x=34, y=1.7, xend=36, yend=1.3))
draw_rnase3_r2b <- geom_segment(mapping=aes(x=36, y=1.7, xend=34, yend=1.3))
}else{
draw_rnase3_r1b <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
draw_rnase3_r2b <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if((genome[9, 2] >= 303) & (genome[9, 3] <= 318)){
draw_rnase3_r1c <- geom_segment(mapping=aes(x=37, y=1.7, xend=39, yend=1.3))
draw_rnase3_r2c <- geom_segment(mapping=aes(x=39, y=1.7, xend=37, yend=1.3))
}else{
draw_rnase3_r1c <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
draw_rnase3_r2c <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
genome_list <- list(draw_prom1_r1a, draw_prom1_r2a, draw_prom1_r1b, draw_prom1_r2b, draw_prom2_r1a, draw_prom2_r2a, draw_prom2_r1b, draw_prom2_r2b, draw_term1_r1a, draw_term1_r2a, draw_term1_r1b, draw_term1_r2b, draw_term1_r1c, draw_term1_r2c, draw_term2_r1a, draw_term2_r2a, draw_term2_r1b, draw_term2_r2b, draw_term2_r1c, draw_term2_r2c, draw_term3a, draw_term3b, draw_rnase1a, draw_rnase1b, draw_rnase2_r1a, draw_rnase2_r2a, draw_rnase2_r1b, draw_rnase2_r2b, draw_rnase2_r1c, draw_rnase2_r2c, draw_rnase3_r1a, draw_rnase3_r2a, draw_rnase3_r1b, draw_rnase3_r2b, draw_rnase3_r1c, draw_rnase3_r2c)
final_genome_plot <- ggplot() + ggtitle("Final Genome Architecture") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + geom_rect(data=genome, mapping=aes(xmin=1, xmax=10, ymin=y1, ymax=y2), fill="blue", alpha=0.5) + geom_rect(data=genome, mapping=aes(xmin=20, xmax=30, ymin=y1, ymax=y2), fill="red", alpha=0.5) + geom_rect(data=genome, mapping=aes(xmin=40, xmax=50, ymin=y1, ymax=y2), fill="yellow", alpha=0.5) + geom_segment(mapping=aes(x=1, y=2, xend=1, yend=2.5), col="black") + geom_segment(mapping=aes(x=30, y=1.5, xend=40, yend=1.5)) + geom_segment(mapping=aes(x=10, y=1.5, xend=20, yend=1.5), color="black") + geom_segment(mapping=aes(x=1, y=2.5, xend=3, yend=2.5), color="black", arrow = arrow(length = unit(0.5, "cm"))) + draw_prom1_r1a + draw_prom1_r2a + draw_prom1_r1b + draw_prom1_r2b + draw_prom2_r1a + draw_prom2_r2a + draw_prom2_r1b + draw_prom2_r2b + draw_term1_r1a + draw_term1_r2a + draw_term1_r1b + draw_term1_r2b + draw_term1_r1c + draw_term1_r2c + draw_term2_r1a + draw_term2_r2a + draw_term2_r1b + draw_term2_r2b + draw_term2_r1c + draw_term2_r2c + draw_term3a + draw_term3b + draw_rnase1a + draw_rnase1b + draw_rnase2_r1a + draw_rnase2_r2a + draw_rnase2_r1b + draw_rnase2_r2b + draw_rnase2_r1c + draw_rnase2_r2c + draw_rnase3_r1a + draw_rnase3_r2a + draw_rnase3_r1b + draw_rnase3_r2b + draw_rnase3_r1c + draw_rnase3_r2c
final_genome_plot
genome_plot <- grid.arrange(final_genome_plot, nrow=1, ncol=1)
ggsave("/home/sahil/pinetree-toys/three_genes_evolution/modularized_files/07_30_2019/random_data_14000_run1/genome_architecture2.jpg", genome_plot, width=30, height=30, limitsize=FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(cowplot)
library(dplyr)
library(gridExtra)
library(ggplot2)
library(gtools)
#Final genome data
setwd("/home/sahil/pinetree-toys/three_genes_evolution/modularized_files/07_30_2019/random_data_14000_run1")
#best_files <- list.files("/home/sahil/pinetree-toys/three_genes_evolution/fixed_memory_leak/", pattern="genome_tracker_")
#best_files <- mixedsort(sort(best_files))
#genome <- read.table(last(best_files), header=TRUE)
genome <- read.table('genome_tracker_9.tsv', header=TRUE)
y1 = 1
y2 = 2
#Draw promoters
if((genome[4, 2] >= 122) & (genome[4, 3] <= 132)){
draw_prom1_r1a <- geom_segment(mapping=aes(x=12, y=1.5, xend=12, yend=2))
draw_prom1_r2a <- geom_segment(mapping=aes(x=12, y=2, xend=13, yend=2), arrow = arrow(length = unit(0.5, "cm")))
} else {
draw_prom1_r1a <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
draw_prom1_r2a <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if((genome[4, 2] >= 133) & (genome[4, 3] <= 143)){
draw_prom1_r1b <- geom_segment(mapping=aes(x=15, y=1.5, xend=15, yend=2))
draw_prom1_r2b <- geom_segment(mapping=aes(x=15, y=2, xend=16, yend=2), arrow = arrow(length = unit(0.5, "cm")))
} else {
draw_prom1_r1b <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
draw_prom1_r2b <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if((genome[5, 2] >= 281) & genome[5, 3] <= 291){
draw_prom2_r1a <- geom_segment(mapping=aes(x=32, y=1.5, xend=32, yend=2))
draw_prom2_r2a <- geom_segment(mapping=aes(x=32, y=2, xend=33, yend=2), arrow = arrow(length = unit(0.5, "cm")))
} else {
draw_prom2_r1a <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
draw_prom2_r2a <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if((genome[5, 2] >= 292) & genome[5, 3] <= 302){
draw_prom2_r1b <- geom_segment(mapping=aes(x=35, y=1.5, xend=35, yend=2))
draw_prom2_r2b <- geom_segment(mapping=aes(x=35, y=2, xend=36, yend=2), arrow = arrow(length = unit(0.5, "cm")))
} else {
draw_prom2_r1b <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
draw_prom2_r2b <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
#Draw terminators
if((genome[10, 2] >= 122) & (genome[10, 3] <= 132)){
draw_term1_r1a <- geom_segment(mapping=aes(x=12, y=1.5, xend=12, yend=1.75))
draw_term1_r2a <- geom_segment(mapping=aes(x=11, y=1.75, xend=13, yend=1.75))
} else {
draw_term1_r1a <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
draw_term1_r2a <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if((genome[10, 2] >= 133) & (genome[10, 3] <= 143)){
draw_term1_r1b <- geom_segment(mapping=aes(x=15, y=1.5, xend=15, yend=1.75))
draw_term1_r2b <- geom_segment(mapping=aes(x=14, y=1.75, xend=16, yend=1.75))
} else {
draw_term1_r1b <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
draw_term1_r2b <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if((genome[10, 2] >= 144) & (genome[10, 3] <= 159)){
draw_term1_r1c <- geom_segment(mapping=aes(x=18, y=1.5, xend=18, yend=1.75))
draw_term1_r2c <- geom_segment(mapping=aes(x=17, y=1.75, xend=19, yend=1.75))
} else {
draw_term1_r1c <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
draw_term1_r2c <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if((genome[11, 2] >= 281) & (genome[11, 3] <= 291)){
draw_term2_r1a <- geom_segment(mapping=aes(x=32, y=1.5, xend=32, yend=1.75))
draw_term2_r2a <- geom_segment(mapping=aes(x=31, y=1.75, xend=33, yend=1.75))
} else {
draw_term2_r1a <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
draw_term2_r2a <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if((genome[11, 2] >= 292) & (genome[11, 3] <= 302)){
draw_term2_r1b <- geom_segment(mapping=aes(x=35, y=1.5, xend=35, yend=1.75))
draw_term2_r2b <- geom_segment(mapping=aes(x=34, y=1.75, xend=36, yend=1.75))
} else {
draw_term2_r1b <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
draw_term2_r2b <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if((genome[11, 2] >= 303) & (genome[11, 3] <= 318)){
draw_term2_r1c <- geom_segment(mapping=aes(x=38, y=1.5, xend=38, yend=1.75))
draw_term2_r2c <- geom_segment(mapping=aes(x=37, y=1.75, xend=39, yend=1.75))
} else {
draw_term2_r1c <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
draw_term2_r2c <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if(genome[12, 2] > 0){
draw_term3a <- geom_segment(mapping=aes(x=50, y=2, xend=50, yend=2.25))
draw_term3b <- geom_segment(mapping=aes(x=47, y=2.25, xend=53, yend=2.25))
} else {
draw_term3a <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
draw_term3b <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
#Draw rnases (first segment, region a within first rnase placement)
if((genome[7, 2] >= 11) & (genome[7, 3] <= 25)){
draw_rnase1a <- geom_segment(mapping=(aes(x=1, y=2.1, xend=3, yend=2)))
draw_rnase1b <- geom_segment(mapping=(aes(x=3, y=2.1, xend=1, yend=2)))
}else{
draw_rnase1a <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
draw_rnase1b <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if((genome[8, 2] >= 122) & (genome[8, 3] <= 132)){
draw_rnase2_r1a <- geom_segment(mapping=aes(x=11, y=1.7, xend=13, yend=1.3))
draw_rnase2_r2a <- geom_segment(mapping=aes(x=13, y=1.7, xend=11, yend=1.3))
}else{
draw_rnase2_r1a <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
draw_rnase2_r2a <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if((genome[8, 2] >= 133) & (genome[8, 3] <= 143)){
draw_rnase2_r1b <- geom_segment(mapping=aes(x=14, y=1.7, xend=16, yend=1.3))
draw_rnase2_r2b <- geom_segment(mapping=aes(x=16, y=1.7, xend=14, yend=1.3))
}else{
draw_rnase2_r1b <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
draw_rnase2_r2b <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if((genome[8, 2] >= 144) & (genome[8, 3] <= 159)){
draw_rnase2_r1c <- geom_segment(mapping=aes(x=17, y=1.7, xend=19, yend=1.3))
draw_rnase2_r2c <- geom_segment(mapping=aes(x=19, y=1.7, xend=17, yend=1.3))
} else {
draw_rnase2_r1c <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
draw_rnase2_r2c <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if((genome[9, 2] >= 281) & (genome[9, 3] <= 291)){
draw_rnase3_r1a <- geom_segment(mapping=aes(x=31, y=1.7, xend=33, yend=1.3))
draw_rnase3_r2a <- geom_segment(mapping=aes(x=33, y=1.7, xend=31, yend=1.3))
}else{
draw_rnase3_r1a <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
draw_rnase3_r2a <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if((genome[9, 2] >= 292) & (genome[9, 3] <= 302)){
draw_rnase3_r1b <- geom_segment(mapping=aes(x=34, y=1.7, xend=36, yend=1.3))
draw_rnase3_r2b <- geom_segment(mapping=aes(x=36, y=1.7, xend=34, yend=1.3))
}else{
draw_rnase3_r1b <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
draw_rnase3_r2b <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
if((genome[9, 2] >= 303) & (genome[9, 3] <= 318)){
draw_rnase3_r1c <- geom_segment(mapping=aes(x=37, y=1.7, xend=39, yend=1.3))
draw_rnase3_r2c <- geom_segment(mapping=aes(x=39, y=1.7, xend=37, yend=1.3))
}else{
draw_rnase3_r1c <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
draw_rnase3_r2c <- geom_segment(mapping=aes(x=0, y=0, xend=0, yend=0))
}
genome_list <- list(draw_prom1_r1a, draw_prom1_r2a, draw_prom1_r1b, draw_prom1_r2b, draw_prom2_r1a, draw_prom2_r2a, draw_prom2_r1b, draw_prom2_r2b, draw_term1_r1a, draw_term1_r2a, draw_term1_r1b, draw_term1_r2b, draw_term1_r1c, draw_term1_r2c, draw_term2_r1a, draw_term2_r2a, draw_term2_r1b, draw_term2_r2b, draw_term2_r1c, draw_term2_r2c, draw_term3a, draw_term3b, draw_rnase1a, draw_rnase1b, draw_rnase2_r1a, draw_rnase2_r2a, draw_rnase2_r1b, draw_rnase2_r2b, draw_rnase2_r1c, draw_rnase2_r2c, draw_rnase3_r1a, draw_rnase3_r2a, draw_rnase3_r1b, draw_rnase3_r2b, draw_rnase3_r1c, draw_rnase3_r2c)
final_genome_plot <- ggplot() + ggtitle("Final Genome Architecture") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + geom_rect(data=genome, mapping=aes(xmin=1, xmax=10, ymin=y1, ymax=y2), fill="blue", alpha=0.5) + geom_rect(data=genome, mapping=aes(xmin=20, xmax=30, ymin=y1, ymax=y2), fill="red", alpha=0.5) + geom_rect(data=genome, mapping=aes(xmin=40, xmax=50, ymin=y1, ymax=y2), fill="yellow", alpha=0.5) + geom_segment(mapping=aes(x=1, y=2, xend=1, yend=2.5), col="black") + geom_segment(mapping=aes(x=30, y=1.5, xend=40, yend=1.5)) + geom_segment(mapping=aes(x=10, y=1.5, xend=20, yend=1.5), color="black") + geom_segment(mapping=aes(x=1, y=2.5, xend=3, yend=2.5), color="black", arrow = arrow(length = unit(0.5, "cm"))) + draw_prom1_r1a + draw_prom1_r2a + draw_prom1_r1b + draw_prom1_r2b + draw_prom2_r1a + draw_prom2_r2a + draw_prom2_r1b + draw_prom2_r2b + draw_term1_r1a + draw_term1_r2a + draw_term1_r1b + draw_term1_r2b + draw_term1_r1c + draw_term1_r2c + draw_term2_r1a + draw_term2_r2a + draw_term2_r1b + draw_term2_r2b + draw_term2_r1c + draw_term2_r2c + draw_term3a + draw_term3b + draw_rnase1a + draw_rnase1b + draw_rnase2_r1a + draw_rnase2_r2a + draw_rnase2_r1b + draw_rnase2_r2b + draw_rnase2_r1c + draw_rnase2_r2c + draw_rnase3_r1a + draw_rnase3_r2a + draw_rnase3_r1b + draw_rnase3_r2b + draw_rnase3_r1c + draw_rnase3_r2c
final_genome_plot
genome_plot <- grid.arrange(final_genome_plot, nrow=1, ncol=1)
ggsave("/home/sahil/pinetree-toys/three_genes_evolution/modularized_files/07_30_2019/random_data_14000_run1/genome_architecture.jpg", genome_plot, width=30, height=30, limitsize=FALSE)
library(cowplot)
library(dplyr)
getwd()
setwd("/home/wilkelab/pinetree-toys/three_genes_evolution/three_genes_target")
setwd("/home/sahil/pinetree-toys/three_genes_evolution/three_genes_target")
data <- read.table("three_genes_test_file.tsv", header = TRUE)
data <- filter(data, species == "proteinX" | species == "proteinY" | species == "proteinZ", time > 99, time < 100)
box_plot1 <- ggplot(data, aes(fill=species, x=species, y=transcript)) + geom_bar(stat="identity")
box_plot1
box_plot1 <- ggplot(data, aes(fill=species, x=species, y=transcript)) + geom_bar(stat="identity") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))
box_plot1
data <- read.table("three_genes_test_file1.tsv", header = TRUE)
data <- filter(data, species == "proteinX" | species == "proteinY" | species == "proteinZ", time > 99, time < 100)
box_plot1 <- ggplot(data, aes(fill=species, x=species, y=transcript)) + geom_bar(stat="identity") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))
box_plot1
data2 <- read.table("three_genes_test_file1.tsv", header = TRUE)
data2 <- read.table("three_genes_test_file.tsv", header = TRUE)
data2 <- filter(data, species == "proteinX" | species == "proteinY" | species == "proteinZ", time > 239, time < 240)
box_plot2 <- ggplot(data2, aes(fill=species, x=species, y=transcript)) + geom_bar(stat="identity")
box_plot2
data2 <- read.table("three_genes_test_file.tsv", header = TRUE)
data2 <- filter(data, species == "proteinX" | species == "proteinY" | species == "proteinZ", time > 239, time < 240)
box_plot2 <- ggplot(data2, aes(fill=species, x=species, y=transcript)) + geom_bar(stat="identity")
box_plot2
data <- read.table("three_genes_test_file.tsv", header = TRUE)
data <- filter(data, species == "proteinX" | species == "proteinY" | species == "proteinZ", time > 99, time < 100)
box_plot1 <- ggplot(data, aes(fill=species, x=species, y=transcript)) + geom_bar(stat="identity") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))
box_plot1
data2 <- read.table("three_genes_test_file.tsv", header = TRUE)
data2 <- filter(data, species == "proteinX" | species == "proteinY" | species == "proteinZ", time > 239, time < 240)
box_plot2 <- ggplot(data2, aes(fill=species, x=species, y=transcript)) + geom_bar(stat="identity")
box_plot2
data2 <- read.table("three_genes_test_file.tsv", header = TRUE)
data2 <- filter(data, species == "proteinX" | species == "proteinY" | species == "proteinZ", time >= 239, time =< 240)
box_plot2 <- ggplot(data2, aes(fill=species, x=species, y=transcript)) + geom_bar(stat="identity")
box_plot2
data2 <- filter(data, species == "proteinX" | species == "proteinY" | species == "proteinZ", time >= 239, time <= 240)
box_plot2 <- ggplot(data2, aes(fill=species, x=species, y=transcript)) + geom_bar(stat="identity")
box_plot2
data2 <- read.table("three_genes_test_file.tsv", header = TRUE)
data2 <- filter(data, time > 239, time < 240, species == "proteinX" | species == "proteinY" | species == "proteinZ")
box_plot2 <- ggplot(data2, aes(fill=species, x=species, y=transcript)) + geom_bar(stat="identity")
box_plot2
data2 <- read.table("three_genes_test_file.tsv", header = TRUE)
data2 <- filter(data, time > 239, time < 240, species == "proteinX" | species == "proteinY" | species == "proteinZ")
View(data2)
data2 <- read.table("three_genes_test_file.tsv", header = TRUE)
data2 <- filter(data, time > 239, time < 240, species == "proteinX" | species == "proteinY" | species == "proteinZ")
data2 <- read.table("three_genes_test_file.tsv", header = TRUE)
data2 <- read.table("three_genes_test_file.tsv", header = TRUE)
data2 <- filter(data2, species == "proteinX" | species == "proteinY" | species == "proteinZ", time > 239, time < 240)
box_plot2 <- ggplot(data2, aes(fill=species, x=species, y=transcript)) + geom_bar(stat="identity")
box_plot2
data2 <- read.table("three_genes_test_file.tsv", header = TRUE)
data2 <- filter(data2, species == "proteinX" | species == "proteinY" | species == "proteinZ", time > 239, time < 240)
box_plot2 <- ggplot(data2, aes(fill=species, x=species, y=transcript)) + geom_bar(stat="identity") + + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))
box_plot2
box_plot2 <- ggplot(data2, aes(fill=species, x=species, y=transcript)) + geom_bar(stat="identity") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))
box_plot2
data <- read.table("three_genes_test_file1.tsv", header = TRUE)
data <- filter(data, species == "proteinX" | species == "proteinY" | species == "proteinZ", time > 99, time < 100)
box_plot1 <- ggplot(data, aes(fill=species, x=species, y=transcript)) + geom_bar(stat="identity") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))
box_plot1
data <- read.table("three_genes_test_file1.tsv", header = TRUE)
data <- filter(data, species == "proteinX" | species == "proteinY" | species == "proteinZ", time > 99, time < 100)
data <- read.table("three_genes_test_file1.tsv", header = TRUE)
data <- filter(data, species == "proteinX" | species == "proteinY" | species == "proteinZ", time > 98, time < 100)
box_plot1 <- ggplot(data, aes(fill=species, x=species, y=transcript)) + geom_bar(stat="identity") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))
box_plot1
data2 <- read.table("three_genes_test_file1.tsv", header = TRUE)
data2 <- filter(data2, species == "proteinX" | species == "proteinY" | species == "proteinZ", time > 239, time < 240)
box_plot2 <- ggplot(data2, aes(fill=species, x=species, y=transcript)) + geom_bar(stat="identity") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))
box_plot2
data3 <- read.table("three_genes_replicated.tsv", header = TRUE)
library(cowplot)
library(dplyr)
getwd()
setwd("/home/sahil/pinetree-toys/three_genes_evolution/three_genes_target")
data3 <- read.table("three_genes_replicated.tsv", header = TRUE)
data3 <- filter(data3, species == "proteinX" | species == "proteinY" | species == "proteinZ")
data3 <- read.table("three_genes_test_file1.tsv", header = TRUE)
data3 <- filter(data3, species == c("proteinX", "proteinY", "proteinZ"))
line_plot <- ggplot(data3, aes(fill=species, color=species, x=time, y=transcript)) + geom_point(stat="identity") + geom_line(stat="identity")
line_plot
data3 <- read.table("three_genes_test_file1.tsv", header = TRUE)
data3 <- filter(data3, species == c("proteinX", "proteinY", "proteinZ"))
line_plot <- ggplot(data3, aes(fill=species, color=species, x=time, y=transcript)) + geom_line(stat="identity") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))
line_plot
data3 <- read.table("three_genes_test_file1.tsv", header = TRUE)
data3 <- filter(data3, species == "proteinX" | species == "proteinY" | species == "proteinZ")
line_plot <- ggplot(data3, aes(fill=species, color=species, x=time, y=transcript)) + geom_line(stat="identity") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))
line_plot
data3 <- read.table("three_genes_test_file.tsv", header = TRUE)
data3 <- filter(data3, species == "proteinX" | species == "proteinY" | species == "proteinZ")
line_plot <- ggplot(data3, aes(fill=species, color=species, x=time, y=transcript)) + geom_line(stat="identity") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))
line_plot
knitr::opts_chunk$set(echo = TRUE)
library(cowplot)
library(dplyr)
library(gridExtra)
library(ggplot2)
setwd("/home/sahil/pinetree-toys/three_genes_evolution/fixed_memory_leak/")
sos_data <- read.table("sos_data.tsv", header=TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(cowplot)
library(dplyr)
library(gridExtra)
library(ggplot2)
setwd("/home/sahil/pinetree-toys/three_genes_evolution/fixed_memory_leak/")
sos_data <- read.table("sos_data.tsv", header=TRUE)
generation_data <- read.table("sos_iter_data.tsv", header=TRUE)
sos_data <- cbind(sos_data, generation_data)
sos_line_plot <- ggplot(sos_data, aes(x=Iteration, y=Sum_of_Squares)) + geom_point(stat="identity") + geom_line(stat="identity") + ggtitle("Evolution of Sum of Squares") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
all_sos_data <- read.table("all_sos_data.tsv", header=TRUE)
all_sos_data$ID <- seq.int(nrow(all_sos_data))
all_sos_line_plot <- ggplot(all_sos_data, aes(x=ID, y=Sum_of_Squares)) + geom_point(stat="identity") + geom_line(stat="identity") + ggtitle("All Sum of Squares Values") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
sos_plots <- grid.arrange(sos_line_plot, all_sos_line_plot, nrow=2, top="Sum of Squares Data")
ggsave("/home/sahil/pinetree-toys/three_genes_evolution/fixed_memory_leak/sos_graphs.pdf", sos_plots, width=20, height=10)
library(cowplot)
library(dplyr)
library(gridExtra)
library(ggplot2)
library(gtools)
setwd("/home/sahil/pinetree-toys/three_genes_evolution/fixed_memory_leak/")
best_file <- list.files("/home/sahil/pinetree-toys/three_genes_evolution/fixed_memory_leak/", pattern="three_genes_replicated_")
best_file <- mixedsort(sort(best_file))
original_data <- read.table("random_data.tsv", header=TRUE)
original_data <- filter(original_data, species == "proteinX" | species == "proteinY" | species == "proteinZ")
original_line_plot <-  ggplot(original_data, aes(fill=species, color=species, x=time, y=transcript)) + geom_line(stat="identity") + ggtitle("Original Genome Function") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
gen1_data <- read.table("gen_1_data.tsv", header=TRUE)
gen1_data <- filter(gen1_data, species == "proteinX" | species == "proteinY" | species == "proteinZ")
gen1_line_plot <-  ggplot(gen1_data, aes(fill=species, color=species, x=time, y=transcript)) + geom_line(stat="identity") + ggtitle("Genome Function at Generation 1") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
gen5000_data <- read.table("gen_5000_data.tsv", header=TRUE)
gen5000_data <- filter(gen5000_data, species == "proteinX" | species == "proteinY" | species == "proteinZ")
gen5000_line_plot <-  ggplot(gen5000_data, aes(fill=species, color=species, x=time, y=transcript)) + geom_line(stat="identity") + ggtitle("Genome Function at Generation 5000") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
gen10000_data <- read.table("gen_10000_data.tsv", header=TRUE)
gen10000_data <- filter(gen10000_data, species == "proteinX" | species == "proteinY" | species == "proteinZ")
gen10000_line_plot <-  ggplot(gen10000_data, aes(fill=species, color=species, x=time, y=transcript)) + geom_line(stat="identity") + ggtitle("Genome Function at Generation 10000") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
final_data <- last(best_file)
gen_final1_data <- read.table(final_data, header=TRUE)
gen_final1_data <- filter(gen_final1_data, species == "proteinX" | species == "proteinY" | species == "proteinZ")
gen_final1_line_plot <-  ggplot(gen_final1_data, aes(fill=species, color=species, x=time, y=transcript)) + geom_line(stat="identity") + ggtitle("Genome Function of Best Genome Found") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
gen_plots <- grid.arrange(original_line_plot, gen1_line_plot, gen5000_line_plot, gen10000_line_plot, gen_final1_line_plot, nrow=2, ncol=3, top="Generational Pattern of Gene Transcripts")
ggsave("/home/sahil/pinetree-toys/three_genes_evolution/fixed_memory_leak/gen_graphs.pdf", gen_plots, width=20, height=10)
library(cowplot)
library(dplyr)
library(gridExtra)
library(ggplot2)
library(gtools)
setwd("/home/sahil/pinetree-toys/three_genes_evolution/fixed_memory_leak/")
best_files <- list.files("/home/sahil/pinetree-toys/three_genes_evolution/fixed_memory_leak/", pattern="three_genes_replicated_")
best_files <- mixedsort(sort(best_files))
plots_list <- list()
target_data <- read.table("random_data.tsv", header=TRUE)
target_data <- filter(target_data, species == "proteinX" | species == "proteinY" | species == "proteinZ")
target_line_plot <-  ggplot(target_data, aes(fill=species, color=species, x=time, y=transcript)) + geom_line(stat="identity") + ggtitle("Target Genome Function") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
gen1_data <- read.table("gen_1_data.tsv", header=TRUE)
gen1_data <- filter(gen1_data, species == "proteinX" | species == "proteinY" | species == "proteinZ")
gen1_line_plot <-  ggplot(gen1_data, aes(fill=species, color=species, x=time, y=transcript)) + geom_line(stat="identity") + ggtitle("Genome Function at Generation 1") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
for(i in 1:length(best_files)){
best <- "best"
best_plot <- "best_plot"
evolution_title <- "Genome Evolution "
plot_title <- paste(evolution_title, i, sep="")
file_name <- assign(paste(best, i, sep=""), read.table(best_files[i], fill=TRUE, header=TRUE))
file_name <- filter(file_name, species == "proteinX" | species == "proteinY" | species == "proteinZ")
plot_name <- assign(paste(best_plot, i, sep=""), ggplot(file_name, aes(fill=species, color=species, x=time, y=transcript)) +          x geom_line(stat="identity") + ggtitle(plot_title)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
library(cowplot)
library(dplyr)
library(gridExtra)
library(ggplot2)
library(gtools)
setwd("/home/sahil/pinetree-toys/three_genes_evolution/fixed_memory_leak/")
best_files <- list.files("/home/sahil/pinetree-toys/three_genes_evolution/fixed_memory_leak/", pattern="three_genes_replicated_")
best_files <- mixedsort(sort(best_files))
plots_list <- list()
target_data <- read.table("random_data.tsv", header=TRUE)
target_data <- filter(target_data, species == "proteinX" | species == "proteinY" | species == "proteinZ")
target_line_plot <-  ggplot(target_data, aes(fill=species, color=species, x=time, y=transcript)) + geom_line(stat="identity") + ggtitle("Target Genome Function") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
gen1_data <- read.table("gen_1_data.tsv", header=TRUE)
gen1_data <- filter(gen1_data, species == "proteinX" | species == "proteinY" | species == "proteinZ")
gen1_line_plot <-  ggplot(gen1_data, aes(fill=species, color=species, x=time, y=transcript)) + geom_line(stat="identity") + ggtitle("Genome Function at Generation 1") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
for(i in 1:length(best_files)){
best <- "best"
best_plot <- "best_plot"
evolution_title <- "Genome Evolution "
plot_title <- paste(evolution_title, i, sep="")
file_name <- assign(paste(best, i, sep=""), read.table(best_files[i], fill=TRUE, header=TRUE))
file_name <- filter(file_name, species == "proteinX" | species == "proteinY" | species == "proteinZ")
plot_name <- assign(paste(best_plot, i, sep=""), ggplot(file_name, aes(fill=species, color=species, x=time, y=transcript)) + geom_line(stat="identity") + ggtitle(plot_title)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
plots_list[i] <- plot_name
}
#evo_plot <- grid.arrange(grobs=plots_list, nrow=ceiling(length(best_files) / 2), ncol=ceiling(length(best_files) / 2), top="Evolutionary Pattern of Gene Transcripts")
evo_plot <- grid.arrange(target_line_plot, gen1_line_plot, best_plot1, best_plot2, best_plot3, best_plot4, best_plot5, best_plot6, best_plot7, best_plot8, best_plot9, best_plot10, best_plot11, best_plot12, best_plot13, nrow=5, ncol=3, top="Evolutionary Pattern of Gene Transcripts")
ggsave("/home/sahil/pinetree-toys/three_genes_evolution/fixed_memory_leak/evolution_graphs.pdf", evo_plot, width=30, height=30, limitsize=FALSE)
library(cowplot)
library(dplyr)
library(gridExtra)
library(ggplot2)
library(gtools)
setwd("/home/sahil/pinetree-toys/three_genes_evolution/fixed_memory_leak/")
best_files <- list.files("/home/sahil/pinetree-toys/three_genes_evolution/fixed_memory_leak/", pattern="three_genes_replicated_")
best_files <- mixedsort(sort(best_files))
plots_list <- list()
target_data <- read.table("random_data.tsv", header=TRUE)
target_data <- filter(target_data, species == "proteinX" | species == "proteinY" | species == "proteinZ")
target_line_plot <-  ggplot(target_data, aes(fill=species, color=species, x=time, y=transcript)) + geom_line(stat="identity") + ggtitle("Target Genome Function") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
gen1_data <- read.table("gen_1_data.tsv", header=TRUE)
gen1_data <- filter(gen1_data, species == "proteinX" | species == "proteinY" | species == "proteinZ")
gen1_line_plot <-  ggplot(gen1_data, aes(fill=species, color=species, x=time, y=transcript)) + geom_line(stat="identity") + ggtitle("Genome Function at Generation 1") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
for(i in 1:length(best_files)){
best <- "best"
best_plot <- "best_plot"
evolution_title <- "Genome Evolution "
plot_title <- paste(evolution_title, i, sep="")
file_name <- assign(paste(best, i, sep=""), read.table(best_files[i], fill=TRUE, header=TRUE))
file_name <- filter(file_name, species == "proteinX" | species == "proteinY" | species == "proteinZ")
plot_name <- assign(paste(best_plot, i, sep=""), ggplot(file_name, aes(fill=species, color=species, x=time, y=transcript)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + geom_line(stat="identity") + ggtitle(plot_title))
plots_list[i] <- plot_name
}
#evo_plot <- grid.arrange(grobs=plots_list, nrow=ceiling(length(best_files) / 2), ncol=ceiling(length(best_files) / 2), top="Evolutionary Pattern of Gene Transcripts")
evo_plot <- grid.arrange(target_line_plot, gen1_line_plot, best_plot1, best_plot2, best_plot3, best_plot4, best_plot5, best_plot6, best_plot7, best_plot8, best_plot9, best_plot10, best_plot11, best_plot12, best_plot13, nrow=5, ncol=3, top="Evolutionary Pattern of Gene Transcripts")
ggsave("/home/sahil/pinetree-toys/three_genes_evolution/fixed_memory_leak/evolution_graphs.pdf", evo_plot, width=30, height=30, limitsize=FALSE)
