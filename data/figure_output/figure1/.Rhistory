scale_color_manual(values=c("#56B4E9", "#E69F00", "#CC79A7")) +
panel_border() +
scale_y_continuous(limits = c(0, 50), expand = c(0, 0))
target_line_plot_1 <- arrangeGrob(target_line_plot_1, top=textGrob("A", x = unit(-0.05, "npc"), y=unit(1, "npc"), just=c("left","top"), gp=gpar(col="black", font="bold", fontsize=40, fontfamily="Arial")))
ggsave("./figures/figure2/figure2_target1.png", target_line_plot_1, height=5, width=5)
#Final
#Set working directory to the directory in which the target data is contained in
setwd("../results/2020_4_16/grant_data7_nf0.5_rep0_nmut3/")
#List all transcript output files
best_files <- list.files(pattern="three_genes_replicated_")
plot_data <- read.table(best_files[length(best_files)], header=TRUE)
plot_data <- filter(plot_data, species == "protein1" | species == "protein2" | species == "protein3")
#Create plot and save it
final_line_plot_1 <-  ggplot(plot_data, aes(fill=species, color=species, size=species, x=time, y=transcript)) +
geom_line(stat="identity", size=2) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.margin = unit(c(0.25,1,1,1), "cm"),
axis.line = element_line(size=1.3),
axis.ticks = element_line(size=1.3),
axis.text = element_text(size=40),
axis.ticks.length = unit(0.4, "cm"),
axis.title = element_blank(),
legend.position = "none") +
scale_color_manual(values=c("#56B4E9", "#E69F00", "#CC79A7")) +
panel_border() +
scale_y_continuous(limits = c(0, 50), expand = c(0, 0))
final_line_plot_1 <- arrangeGrob(final_line_plot_1, top=textGrob("A", x = unit(0, "npc"), y=unit(1, "npc"), just=c("left","top"), gp=gpar(col="white", font="bold", fontsize=40, fontfamily="Arial")))
ggsave("../../../data/figures/figure2/figure2_final1.png", final_line_plot_1, height=5, width=5)
#Target
#Set working directory to the directory in which the target data is contained in
setwd("../../data/")
#Change grant_data name to the target file used
target_data <- read.table("grant_data8.tsv", header=TRUE)
target_data <- filter(target_data, species == "protein1" | species == "protein2" | species == "protein3")
#Create plot and save it
target_line_plot_2 <-  ggplot(target_data, aes(fill=species, color=species, size=species, x=time, y=transcript)) +
geom_line(stat="identity", size=2) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.margin = unit(c(1,1,0.25,1), "cm"),
axis.line = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
axis.ticks.length.x = unit(0.4, "cm"),
axis.title = element_blank(),
legend.position = "none") +
scale_color_manual(values=c("#56B4E9", "#E69F00", "#CC79A7")) +
panel_border() +
scale_y_continuous(limits = c(0, 50), expand = c(0, 0))
target_line_plot_2 <- arrangeGrob(target_line_plot_2, top=textGrob("A", x = unit(0, "npc"), y=unit(1, "npc"), just=c("left","top"), gp=gpar(col="white", font="bold", fontsize=40, fontfamily="Arial")))
ggsave("./figures/figure2/figure2_target2.png", target_line_plot_2, height=5, width=5)
#Final
#Set working directory to the directory in which the target data is contained in
setwd("../results/2020_4_16/grant_data7_nf0.5_rep0_nmut3/")
#List all transcript output files
best_files <- list.files(pattern="three_genes_replicated_")
plot_data <- read.table(best_files[length(best_files)], header=TRUE)
plot_data <- filter(plot_data, species == "protein1" | species == "protein2" | species == "protein3")
#Create plot and save it
final_line_plot_2 <-  ggplot(plot_data, aes(fill=species, color=species, size=species, x=time, y=transcript)) +
geom_line(stat="identity", size=2) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.margin = unit(c(0.25,1,1,1), "cm"),
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.line.x = element_line(size=1.3),
axis.ticks.x = element_line(size=1.3),
axis.text.x = element_text(size=40),
axis.ticks.length.x = unit(0.4, "cm"),
axis.title = element_blank(),
legend.position = "none") +
scale_color_manual(values=c("#56B4E9", "#E69F00", "#CC79A7")) +
panel_border() +
scale_y_continuous(limits = c(0, 50), expand = c(0, 0))
final_line_plot_2 <- arrangeGrob(final_line_plot_2, top=textGrob("A", x = unit(0, "npc"), y=unit(1, "npc"), just=c("left","top"), gp=gpar(col="white", font="bold", fontsize=40, fontfamily="Arial")))
ggsave("../../../data/figures/figure2/figure2_final2.png", final_line_plot_2, height=5, width=5)
#Target
#Set working directory to the directory in which the target data is contained in
setwd("../../data/")
#Change grant_data name to the target file used
target_data <- read.table("grant_data9.tsv", header=TRUE)
target_data <- filter(target_data, species == "protein1" | species == "protein2" | species == "protein3")
#Create plot and save it
target_line_plot_3 <-  ggplot(target_data, aes(fill=species, color=species, size=species, x=time, y=transcript)) +
geom_line(stat="identity", size=2) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.margin = unit(c(1,1,0.25,1), "cm"),
axis.line = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
axis.ticks.length.x = unit(0.4, "cm"),
axis.title = element_blank(),
legend.position = "none") +
scale_color_manual(values=c("#56B4E9", "#E69F00", "#CC79A7")) +
panel_border() +
scale_y_continuous(limits = c(0, 50), expand = c(0, 0))
target_line_plot_3 <- arrangeGrob(target_line_plot_3, top=textGrob("A", x = unit(0, "npc"), y=unit(1, "npc"), just=c("left","top"), gp=gpar(col="white", font="bold", fontsize=40, fontfamily="Arial")))
ggsave("./figures/figure2/figure2_target3.png", target_line_plot_3, height=5, width=5)
#Final
#Set working directory to the directory in which the target data is contained in
setwd("../results/2020_4_16/grant_data7_nf0.5_rep0_nmut3/")
#List all transcript output files
best_files <- list.files(pattern="three_genes_replicated_")
plot_data <- read.table(best_files[length(best_files)], header=TRUE)
plot_data <- filter(plot_data, species == "protein1" | species == "protein2" | species == "protein3")
#Create plot and save it
final_line_plot_3 <-  ggplot(plot_data, aes(fill=species, color=species, size=species, x=time, y=transcript)) +
geom_line(stat="identity", size=2) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.margin = unit(c(0.25,1,1,1), "cm"),
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.line.x = element_line(size=1.3),
axis.ticks.x = element_line(size=1.3),
axis.text.x = element_text(size=40),
axis.ticks.length.x = unit(0.4, "cm"),
axis.title = element_blank(),
legend.position = "none") +
scale_color_manual(values=c("#56B4E9", "#E69F00", "#CC79A7")) +
panel_border() +
scale_y_continuous(limits = c(0, 50), expand = c(0, 0))
final_line_plot_3 <- arrangeGrob(final_line_plot_3, top=textGrob("A", x = unit(0, "npc"), y=unit(1, "npc"), just=c("left","top"), gp=gpar(col="white", font="bold", fontsize=40, fontfamily="Arial")))
ggsave("../../../data/figures/figure2/figure2_final3.png", final_line_plot_3, height=5, width=5)
#Target
#Set working directory to the directory in which the target data is contained in
setwd("../../data/")
#Change grant_data name to the target file used
target_data <- read.table("grant_data10.tsv", header=TRUE)
target_data <- filter(target_data, species == "protein1" | species == "protein2" | species == "protein3")
#Create plot and save it
target_line_plot_4 <-  ggplot(target_data, aes(fill=species, color=species, size=species, x=time, y=transcript)) +
geom_line(stat="identity", size=2) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.margin = unit(c(1,1,0.25,1), "cm"),
axis.line = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
axis.ticks.length.x = unit(0.4, "cm"),
axis.title = element_blank(),
legend.position = "none") +
scale_color_manual(values=c("#56B4E9", "#E69F00", "#CC79A7")) +
panel_border() +
scale_y_continuous(limits = c(0, 50), expand = c(0, 0))
target_line_plot_4 <- arrangeGrob(target_line_plot_4, top=textGrob("A", x = unit(0, "npc"), y=unit(1, "npc"), just=c("left","top"), gp=gpar(col="white", font="bold", fontsize=40, fontfamily="Arial")))
ggsave("./figures/figure2/figure2_target4.png", target_line_plot_4, height=5, width=5)
#Final
#Set working directory to the directory in which the target data is contained in
setwd("../results/2020_4_16/grant_data7_nf0.5_rep0_nmut3/")
#List all transcript output files
best_files <- list.files(pattern="three_genes_replicated_")
plot_data <- read.table(best_files[length(best_files)], header=TRUE)
plot_data <- filter(plot_data, species == "protein1" | species == "protein2" | species == "protein3")
#Create plot and save it
final_line_plot_4 <-  ggplot(plot_data, aes(fill=species, color=species, size=species, x=time, y=transcript)) +
geom_line(stat="identity", size=2) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.margin = unit(c(0.25,1,1,1), "cm"),
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.line.x = element_line(size=1.3),
axis.ticks.x = element_line(size=1.3),
axis.text.x = element_text(size=40),
axis.ticks.length.x = unit(0.4, "cm"),
axis.title = element_blank(),
legend.position = "none") +
scale_color_manual(values=c("#56B4E9", "#E69F00", "#CC79A7")) +
panel_border() +
scale_y_continuous(limits = c(0, 50), expand = c(0, 0))
final_line_plot_4 <- arrangeGrob(final_line_plot_4, top=textGrob("A", x = unit(0, "npc"), y=unit(1, "npc"), just=c("left","top"), gp=gpar(col="white", font="bold", fontsize=40, fontfamily="Arial")))
ggsave("../../../data/figures/figure2/figure2_final4.png", final_line_plot_4, height=5, width=5)
#Target
#Set working directory to the directory in which the target data is contained in
setwd("../../data/")
#Change grant_data name to the target file used
target_data <- read.table("grant_data11.tsv", header=TRUE)
target_data <- filter(target_data, species == "protein1" | species == "protein2" | species == "protein3")
#Create plot and save it
target_line_plot_5 <-  ggplot(target_data, aes(fill=species, color=species, size=species, x=time, y=transcript)) +
geom_line(stat="identity", size=2) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.margin = unit(c(1,1,0.25,1), "cm"),
axis.line = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
axis.ticks.length.x = unit(0.4, "cm"),
axis.title = element_blank(),
legend.position = "none") +
scale_color_manual(values=c("#56B4E9", "#E69F00", "#CC79A7")) +
panel_border() +
scale_y_continuous(limits = c(0, 50), expand = c(0, 0))
target_line_plot_5 <- arrangeGrob(target_line_plot_5, top=textGrob("A", x = unit(0, "npc"), y=unit(1, "npc"), just=c("left","top"), gp=gpar(col="white", font="bold", fontsize=40, fontfamily="Arial")))
ggsave("./figures/figure2/figure2_target5.png", target_line_plot_5, height=5, width=5)
#Final
#Set working directory to the directory in which the target data is contained in
setwd("../results/2020_4_16/grant_data7_nf0.5_rep0_nmut3/")
#List all transcript output files
best_files <- list.files(pattern="three_genes_replicated_")
plot_data <- read.table(best_files[length(best_files)], header=TRUE)
plot_data <- filter(plot_data, species == "protein1" | species == "protein2" | species == "protein3")
#Create plot and save it
final_line_plot_5 <-  ggplot(plot_data, aes(fill=species, color=species, size=species, x=time, y=transcript)) +
geom_line(stat="identity", size=2) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.margin = unit(c(0.25,1,1,1), "cm"),
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.line.x = element_line(size=1.3),
axis.ticks.x = element_line(size=1.3),
axis.text.x = element_text(size=40),
axis.ticks.length.x = unit(0.4, "cm"),
axis.title = element_blank(),
legend.position = "none") +
scale_color_manual(values=c("#56B4E9", "#E69F00", "#CC79A7")) +
panel_border() +
scale_y_continuous(limits = c(0, 50), expand = c(0, 0))
final_line_plot_5 <- arrangeGrob(final_line_plot_5, top=textGrob("A", x = unit(0, "npc"), y=unit(1, "npc"), just=c("left","top"), gp=gpar(col="white", font="bold", fontsize=40, fontfamily="Arial")))
ggsave("../../../data/figures/figure2/figure2_final5.png", final_line_plot_5, height=5, width=5)
setwd("../../data/figures/figure2/")
figure2 <- grid.arrange(target_line_plot_1, target_line_plot_2, target_line_plot_3, target_line_plot_4, target_line_plot_5, final_line_plot_1, final_line_plot_2, final_line_plot_3, final_line_plot_4, final_line_plot_5, layout_matrix=rbind(c(1,2,3,4,5), c(6,7,8,9,10)), widths=c(2.4,2.2,2.2,2.2,2.2), right=textGrob("            Target                                   Evolved", rot=270, gp=gpar(fontsize=40, fontfamily="Arial"), vjust=1, hjust=0.6), left=textGrob("Transcript abundance", rot=90, gp=gpar(fontsize=40, fontfamily="Arial"), vjust=1), bottom=textGrob("Time (s)", gp=gpar(fontsize=40, fontfamily="Arial")))
ggsave("figure2.png", figure2, height=15, width=40)
knitr::opts_chunk$set(echo = TRUE)
library(cowplot)
library(dplyr)
library(gridExtra)
library(ggplot2)
library(grid)
library(reshape2)
library(gtools)
#Target
#Set working directory to the directory in which the target data is contained in
setwd("../../data/")
#Change grant_data name to the target file used
target_data <- read.table("grant_data7.tsv", header=TRUE)
target_data <- filter(target_data, species == "protein1" | species == "protein2" | species == "protein3")
#Create plot and save it
target_line_plot_1 <-  ggplot(target_data, aes(fill=species, color=species, size=species, x=time, y=transcript)) +
geom_line(stat="identity", size=2) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.margin = unit(c(1,1,0.25,1), "cm"),
axis.line.x = element_blank(),
axis.line.y = element_line(size=1.3),
axis.ticks.x = element_blank(),
axis.ticks.y = element_line(size=1.3),
axis.text.x = element_blank(),
axis.text.y = element_text(size=40),
axis.ticks.length.y = unit(0.4, "cm"),
axis.title = element_blank(),
legend.position = "none") +
scale_color_manual(values=c("#56B4E9", "#E69F00", "#CC79A7")) +
panel_border() +
scale_y_continuous(limits = c(0, 50), expand = c(0, 0))
target_line_plot_1 <- arrangeGrob(target_line_plot_1, top=textGrob("A", x = unit(-0.05, "npc"), y=unit(1, "npc"), just=c("left","top"), gp=gpar(col="black", font="bold", fontsize=40, fontfamily="Arial")))
ggsave("./figures/figure2/figure2_target1.png", target_line_plot_1, height=5, width=5)
#Final
#Set working directory to the directory in which the target data is contained in
setwd("../results/2020_4_16/grant_data7_nf0.5_rep0_nmut3/")
#List all transcript output files
best_files <- list.files(pattern="three_genes_replicated_")
plot_data <- read.table(best_files[length(best_files)], header=TRUE)
plot_data <- filter(plot_data, species == "protein1" | species == "protein2" | species == "protein3")
#Create plot and save it
final_line_plot_1 <-  ggplot(plot_data, aes(fill=species, color=species, size=species, x=time, y=transcript)) +
geom_line(stat="identity", size=2) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.margin = unit(c(0.25,1,0.5,1), "cm"),
axis.line = element_line(size=1.3),
axis.ticks = element_line(size=1.3),
axis.text = element_text(size=40),
axis.ticks.length = unit(0.4, "cm"),
axis.title = element_blank(),
legend.position = "none") +
scale_color_manual(values=c("#56B4E9", "#E69F00", "#CC79A7")) +
panel_border() +
scale_y_continuous(limits = c(0, 50), expand = c(0, 0))
final_line_plot_1 <- arrangeGrob(final_line_plot_1, top=textGrob("A", x = unit(0, "npc"), y=unit(1, "npc"), just=c("left","top"), gp=gpar(col="white", font="bold", fontsize=40, fontfamily="Arial")))
ggsave("../../../data/figures/figure2/figure2_final1.png", final_line_plot_1, height=5, width=5)
#Target
#Set working directory to the directory in which the target data is contained in
setwd("../../data/")
#Change grant_data name to the target file used
target_data <- read.table("grant_data8.tsv", header=TRUE)
target_data <- filter(target_data, species == "protein1" | species == "protein2" | species == "protein3")
#Create plot and save it
target_line_plot_2 <-  ggplot(target_data, aes(fill=species, color=species, size=species, x=time, y=transcript)) +
geom_line(stat="identity", size=2) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.margin = unit(c(1,1,0.25,1), "cm"),
axis.line = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
axis.ticks.length.x = unit(0.4, "cm"),
axis.title = element_blank(),
legend.position = "none") +
scale_color_manual(values=c("#56B4E9", "#E69F00", "#CC79A7")) +
panel_border() +
scale_y_continuous(limits = c(0, 50), expand = c(0, 0))
target_line_plot_2 <- arrangeGrob(target_line_plot_2, top=textGrob("A", x = unit(0, "npc"), y=unit(1, "npc"), just=c("left","top"), gp=gpar(col="white", font="bold", fontsize=40, fontfamily="Arial")))
ggsave("./figures/figure2/figure2_target2.png", target_line_plot_2, height=5, width=5)
#Final
#Set working directory to the directory in which the target data is contained in
setwd("../results/2020_4_16/grant_data7_nf0.5_rep0_nmut3/")
#List all transcript output files
best_files <- list.files(pattern="three_genes_replicated_")
plot_data <- read.table(best_files[length(best_files)], header=TRUE)
plot_data <- filter(plot_data, species == "protein1" | species == "protein2" | species == "protein3")
#Create plot and save it
final_line_plot_2 <-  ggplot(plot_data, aes(fill=species, color=species, size=species, x=time, y=transcript)) +
geom_line(stat="identity", size=2) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.margin = unit(c(0.25,1,0.5,1), "cm"),
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.line.x = element_line(size=1.3),
axis.ticks.x = element_line(size=1.3),
axis.text.x = element_text(size=40),
axis.ticks.length.x = unit(0.4, "cm"),
axis.title = element_blank(),
legend.position = "none") +
scale_color_manual(values=c("#56B4E9", "#E69F00", "#CC79A7")) +
panel_border() +
scale_y_continuous(limits = c(0, 50), expand = c(0, 0))
final_line_plot_2 <- arrangeGrob(final_line_plot_2, top=textGrob("A", x = unit(0, "npc"), y=unit(1, "npc"), just=c("left","top"), gp=gpar(col="white", font="bold", fontsize=40, fontfamily="Arial")))
ggsave("../../../data/figures/figure2/figure2_final2.png", final_line_plot_2, height=5, width=5)
#Target
#Set working directory to the directory in which the target data is contained in
setwd("../../data/")
#Change grant_data name to the target file used
target_data <- read.table("grant_data9.tsv", header=TRUE)
target_data <- filter(target_data, species == "protein1" | species == "protein2" | species == "protein3")
#Create plot and save it
target_line_plot_3 <-  ggplot(target_data, aes(fill=species, color=species, size=species, x=time, y=transcript)) +
geom_line(stat="identity", size=2) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.margin = unit(c(1,1,0.25,1), "cm"),
axis.line = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
axis.ticks.length.x = unit(0.4, "cm"),
axis.title = element_blank(),
legend.position = "none") +
scale_color_manual(values=c("#56B4E9", "#E69F00", "#CC79A7")) +
panel_border() +
scale_y_continuous(limits = c(0, 50), expand = c(0, 0))
target_line_plot_3 <- arrangeGrob(target_line_plot_3, top=textGrob("A", x = unit(0, "npc"), y=unit(1, "npc"), just=c("left","top"), gp=gpar(col="white", font="bold", fontsize=40, fontfamily="Arial")))
ggsave("./figures/figure2/figure2_target3.png", target_line_plot_3, height=5, width=5)
#Final
#Set working directory to the directory in which the target data is contained in
setwd("../results/2020_4_16/grant_data7_nf0.5_rep0_nmut3/")
#List all transcript output files
best_files <- list.files(pattern="three_genes_replicated_")
plot_data <- read.table(best_files[length(best_files)], header=TRUE)
plot_data <- filter(plot_data, species == "protein1" | species == "protein2" | species == "protein3")
#Create plot and save it
final_line_plot_3 <-  ggplot(plot_data, aes(fill=species, color=species, size=species, x=time, y=transcript)) +
geom_line(stat="identity", size=2) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.margin = unit(c(0.25,1,0.5,1), "cm"),
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.line.x = element_line(size=1.3),
axis.ticks.x = element_line(size=1.3),
axis.text.x = element_text(size=40),
axis.ticks.length.x = unit(0.4, "cm"),
axis.title = element_blank(),
legend.position = "none") +
scale_color_manual(values=c("#56B4E9", "#E69F00", "#CC79A7")) +
panel_border() +
scale_y_continuous(limits = c(0, 50), expand = c(0, 0))
final_line_plot_3 <- arrangeGrob(final_line_plot_3, top=textGrob("A", x = unit(0, "npc"), y=unit(1, "npc"), just=c("left","top"), gp=gpar(col="white", font="bold", fontsize=40, fontfamily="Arial")))
ggsave("../../../data/figures/figure2/figure2_final3.png", final_line_plot_3, height=5, width=5)
#Target
#Set working directory to the directory in which the target data is contained in
setwd("../../data/")
#Change grant_data name to the target file used
target_data <- read.table("grant_data10.tsv", header=TRUE)
target_data <- filter(target_data, species == "protein1" | species == "protein2" | species == "protein3")
#Create plot and save it
target_line_plot_4 <-  ggplot(target_data, aes(fill=species, color=species, size=species, x=time, y=transcript)) +
geom_line(stat="identity", size=2) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.margin = unit(c(1,1,0.25,1), "cm"),
axis.line = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
axis.ticks.length.x = unit(0.4, "cm"),
axis.title = element_blank(),
legend.position = "none") +
scale_color_manual(values=c("#56B4E9", "#E69F00", "#CC79A7")) +
panel_border() +
scale_y_continuous(limits = c(0, 50), expand = c(0, 0))
target_line_plot_4 <- arrangeGrob(target_line_plot_4, top=textGrob("A", x = unit(0, "npc"), y=unit(1, "npc"), just=c("left","top"), gp=gpar(col="white", font="bold", fontsize=40, fontfamily="Arial")))
ggsave("./figures/figure2/figure2_target4.png", target_line_plot_4, height=5, width=5)
#Final
#Set working directory to the directory in which the target data is contained in
setwd("../results/2020_4_16/grant_data7_nf0.5_rep0_nmut3/")
#List all transcript output files
best_files <- list.files(pattern="three_genes_replicated_")
plot_data <- read.table(best_files[length(best_files)], header=TRUE)
plot_data <- filter(plot_data, species == "protein1" | species == "protein2" | species == "protein3")
#Create plot and save it
final_line_plot_4 <-  ggplot(plot_data, aes(fill=species, color=species, size=species, x=time, y=transcript)) +
geom_line(stat="identity", size=2) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.margin = unit(c(0.25,1,0.5,1), "cm"),
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.line.x = element_line(size=1.3),
axis.ticks.x = element_line(size=1.3),
axis.text.x = element_text(size=40),
axis.ticks.length.x = unit(0.4, "cm"),
axis.title = element_blank(),
legend.position = "none") +
scale_color_manual(values=c("#56B4E9", "#E69F00", "#CC79A7")) +
panel_border() +
scale_y_continuous(limits = c(0, 50), expand = c(0, 0))
final_line_plot_4 <- arrangeGrob(final_line_plot_4, top=textGrob("A", x = unit(0, "npc"), y=unit(1, "npc"), just=c("left","top"), gp=gpar(col="white", font="bold", fontsize=40, fontfamily="Arial")))
ggsave("../../../data/figures/figure2/figure2_final4.png", final_line_plot_4, height=5, width=5)
#Target
#Set working directory to the directory in which the target data is contained in
setwd("../../data/")
#Change grant_data name to the target file used
target_data <- read.table("grant_data11.tsv", header=TRUE)
target_data <- filter(target_data, species == "protein1" | species == "protein2" | species == "protein3")
#Create plot and save it
target_line_plot_5 <-  ggplot(target_data, aes(fill=species, color=species, size=species, x=time, y=transcript)) +
geom_line(stat="identity", size=2) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.margin = unit(c(1,1,0.25,1), "cm"),
axis.line = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
axis.ticks.length.x = unit(0.4, "cm"),
axis.title = element_blank(),
legend.position = "none") +
scale_color_manual(values=c("#56B4E9", "#E69F00", "#CC79A7")) +
panel_border() +
scale_y_continuous(limits = c(0, 50), expand = c(0, 0))
target_line_plot_5 <- arrangeGrob(target_line_plot_5, top=textGrob("A", x = unit(0, "npc"), y=unit(1, "npc"), just=c("left","top"), gp=gpar(col="white", font="bold", fontsize=40, fontfamily="Arial")))
ggsave("./figures/figure2/figure2_target5.png", target_line_plot_5, height=5, width=5)
#Final
#Set working directory to the directory in which the target data is contained in
setwd("../results/2020_4_16/grant_data7_nf0.5_rep0_nmut3/")
#List all transcript output files
best_files <- list.files(pattern="three_genes_replicated_")
plot_data <- read.table(best_files[length(best_files)], header=TRUE)
plot_data <- filter(plot_data, species == "protein1" | species == "protein2" | species == "protein3")
#Create plot and save it
final_line_plot_5 <-  ggplot(plot_data, aes(fill=species, color=species, size=species, x=time, y=transcript)) +
geom_line(stat="identity", size=2) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.margin = unit(c(0.25,1,0.5,1), "cm"),
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.line.x = element_line(size=1.3),
axis.ticks.x = element_line(size=1.3),
axis.text.x = element_text(size=40),
axis.ticks.length.x = unit(0.4, "cm"),
axis.title = element_blank(),
legend.position = "none") +
scale_color_manual(values=c("#56B4E9", "#E69F00", "#CC79A7")) +
panel_border() +
scale_y_continuous(limits = c(0, 50), expand = c(0, 0))
final_line_plot_5 <- arrangeGrob(final_line_plot_5, top=textGrob("A", x = unit(0, "npc"), y=unit(1, "npc"), just=c("left","top"), gp=gpar(col="white", font="bold", fontsize=40, fontfamily="Arial")))
ggsave("../../../data/figures/figure2/figure2_final5.png", final_line_plot_5, height=5, width=5)
setwd("../../data/figures/figure2/")
figure2 <- grid.arrange(target_line_plot_1, target_line_plot_2, target_line_plot_3, target_line_plot_4, target_line_plot_5, final_line_plot_1, final_line_plot_2, final_line_plot_3, final_line_plot_4, final_line_plot_5, layout_matrix=rbind(c(1,2,3,4,5), c(6,7,8,9,10)), widths=c(2.4,2.2,2.2,2.2,2.2), right=textGrob("            Target                                   Evolved", rot=270, gp=gpar(fontsize=40, fontfamily="Arial"), vjust=1, hjust=0.6), left=textGrob("Transcript abundance", rot=90, gp=gpar(fontsize=40, fontfamily="Arial"), vjust=1), bottom=textGrob("Time (s)", gp=gpar(fontsize=40, fontfamily="Arial")))
ggsave("figure2.png", figure2, height=15, width=40)
