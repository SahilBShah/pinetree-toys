ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity') + geom_line(size=1, stat='identity') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10)) + xlab("Strength of Promoter") + ylab("Protein1 Transcripts")
setwd('../../data/parameters_testing/')
term_files <- list.files(pattern="term_test_")
term_files <- mixedsort(sort(term_files))
x_data <- c(0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0)
y_data <- c()
for (i in 1:length(term_files)){
p1_data <- read.table(term_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
p2_data <- read.table(term_files[i], header=TRUE) %>% filter(time==239, species=='protein2') %>% select('transcript')
if (nrow(p2_data) != 0){
y_data[i] <- p2_data$transcript/p1_data$transcript
}else{
y_data[i] <- 0
}
}
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity') + geom_line(size=1, stat='identity') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10)) + xlab("Strength of Terminator") + ylab("Ratio of Protein2 Transcripts/Protein1 Transcripts")
setwd('../../data/parameters_testing/')
rnase_files <- list.files(pattern="rnase_test_")
rnase_files <- mixedsort(sort(rnase_files))
x_data <- c(0.0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1.0, 1.05, 1.1, 1.15, 1.2, 1.25, 1.3, 1.35, 1.4, 1.45, 1.5)
y_data <- c()
for (i in 1:length(prom_files)){
p1_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
p2_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein2') %>% select('transcript')
y_data[i] <- p2_data$transcript/p1_data$transcript
}
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity') + geom_line(size=1, stat='identity') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10)) + xlab("Strength of RNAse Site") + ylab("Ratio of Protein2 transcripts/Protein1 transcripts")
setwd('../../data/parameters_testing/')
term_files <- list.files(pattern="term_test_")
term_files <- mixedsort(sort(term_files))
x_data <- c(0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0)
y_data <- c()
for (i in 1:length(term_files)){
p1_data <- read.table(term_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
p2_data <- read.table(term_files[i], header=TRUE) %>% filter(time==239, species=='protein2') %>% select('transcript')
if (nrow(p2_data) != 0){
y_data[i] <- p2_data$transcript/p1_data$transcript
}else{
y_data[i] <- 0
}
}
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity') + geom_line(size=1, stat='identity') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10)) + xlab("Strength of Terminator") + ylab("Ratio of Protein2 transcripts/Protein1 transcripts")
setwd('../../data/parameters_testing/')
prom_files <- list.files(pattern="prom_test_")
prom_files <- mixedsort(sort(prom_files))
x_data <- c(log(10e5), log(10e6), log(10e7), log(10e8), log(10e9), log(10e10), log(10e11), log(10e12), log(10e13), log(10e14), log(10e15), log(10e16), log(10e17), log(10e18), log(10e19), log(10e20))
y_data <- c()
for (i in 1:length(prom_files)){
p1_data <- read.table(prom_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
y_data[i] <- p1_data$transcript
}
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity') + geom_line(size=1, stat='identity') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10)) + xlab("Strength of Promoter") + ylab("Protein1 Transcripts")
setwd('../../data/parameters_testing/')
prom_files <- list.files(pattern="prom_test_")
prom_files <- mixedsort(sort(prom_files))
x_data <- c(log(10e5), log(10e6), log(10e7), log(10e8), log(10e9), log(10e10), log(10e11), log(10e12), log(10e13), log(10e14), log(10e15), log(10e16), log(10e17), log(10e18), log(10e19), log(10e20))
y_data <- c()
for (i in 1:length(prom_files)){
p1_data <- read.table(prom_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
y_data[i] <- p1_data$transcript
}
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity') + geom_line(size=1, stat='identity') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10)) + xlab("Log Scale for Strength of Promoter") + ylab("Protein1 Transcripts")
setwd('../../data/parameters_testing/')
rnase_files <- list.files(pattern="rnase_test_")
rnase_files <- mixedsort(sort(rnase_files))
x_data <- c(0.0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1.0, 1.05, 1.1, 1.15, 1.2, 1.25, 1.3, 1.35, 1.4, 1.45, 1.5)
y_data <- c()
for (i in 1:length(prom_files)){
p1_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
p2_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein2') %>% select('transcript')
y_data[i] <- p2_data$transcript/p1_data$transcript
}
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity') + geom_line(size=1, stat='identity') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10)) + xlab("Strength of RNAse Site") + ylab("Ratio of Protein2 transcripts/Protein1 transcripts") + ggtitle("Ratio of Protein Transcripts According to RNAse Strength")
setwd('../../data/parameters_testing/')
rnase_files <- list.files(pattern="rnase_test_")
rnase_files <- mixedsort(sort(rnase_files))
x_data <- c(0.0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1.0, 1.05, 1.1, 1.15, 1.2, 1.25, 1.3, 1.35, 1.4, 1.45, 1.5)
y_data <- c()
for (i in 1:length(prom_files)){
p1_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
p2_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein2') %>% select('transcript')
y_data[i] <- p2_data$transcript/p1_data$transcript
}
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity') + geom_line(size=1, stat='identity') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10)) + xlab("Strength of RNAse Site") + ylab("Ratio of Protein2 transcripts/Protein1 transcripts") + ggtitle("Ratio of Protein Transcripts According to RNAse Strength", color="black")
setwd('../../data/parameters_testing/')
rnase_files <- list.files(pattern="rnase_test_")
rnase_files <- mixedsort(sort(rnase_files))
x_data <- c(0.0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1.0, 1.05, 1.1, 1.15, 1.2, 1.25, 1.3, 1.35, 1.4, 1.45, 1.5)
y_data <- c()
for (i in 1:length(prom_files)){
p1_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
p2_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein2') %>% select('transcript')
y_data[i] <- p2_data$transcript/p1_data$transcript
}
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity') + geom_line(size=1, stat='identity') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10)) + xlab("Strength of RNAse Site") + ylab("Ratio of Protein2 transcripts/Protein1 transcripts") + ggtitle("Ratio of Protein Transcripts According to RNAse Strength")
setwd('../../data/parameters_testing/')
rnase_files <- list.files(pattern="rnase_test_")
rnase_files <- mixedsort(sort(rnase_files))
x_data <- c(0.0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1.0, 1.05, 1.1, 1.15, 1.2, 1.25, 1.3, 1.35, 1.4, 1.45, 1.5)
y_data <- c()
for (i in 1:length(prom_files)){
p1_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
p2_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein2') %>% select('transcript')
y_data[i] <- p2_data$transcript/p1_data$transcript
}
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity') + geom_line(size=1, stat='identity') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title(color="black")) + xlab("Strength of RNAse Site") + ylab("Ratio of Protein2 transcripts/Protein1 transcripts") + ggtitle("Ratio of Protein Transcripts According to RNAse Strength")
setwd('../../data/parameters_testing/')
rnase_files <- list.files(pattern="rnase_test_")
rnase_files <- mixedsort(sort(rnase_files))
x_data <- c(0.0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1.0, 1.05, 1.1, 1.15, 1.2, 1.25, 1.3, 1.35, 1.4, 1.45, 1.5)
y_data <- c()
for (i in 1:length(prom_files)){
p1_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
p2_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein2') %>% select('transcript')
y_data[i] <- p2_data$transcript/p1_data$transcript
}
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity') + geom_line(size=1, stat='identity') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black")) + xlab("Strength of RNAse Site") + ylab("Ratio of Protein2 transcripts/Protein1 transcripts") + ggtitle("Ratio of Protein Transcripts According to RNAse Strength")
setwd('../../data/parameters_testing/')
rnase_files <- list.files(pattern="rnase_test_")
rnase_files <- mixedsort(sort(rnase_files))
x_data <- c(0.0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1.0, 1.05, 1.1, 1.15, 1.2, 1.25, 1.3, 1.35, 1.4, 1.45, 1.5)
y_data <- c()
for (i in 1:length(prom_files)){
p1_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
p2_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein2') %>% select('transcript')
y_data[i] <- p2_data$transcript/p1_data$transcript
}
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity') + geom_line(size=1, stat='identity') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("Strength of RNAse Site") + ylab("Ratio of Protein2 transcripts/Protein1 transcripts") + ggtitle("Ratio of Protein Transcripts According to RNAse Strength")
setwd('../../data/parameters_testing/')
term_files <- list.files(pattern="term_test_")
term_files <- mixedsort(sort(term_files))
x_data <- c(0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0)
y_data <- c()
for (i in 1:length(term_files)){
p1_data <- read.table(term_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
p2_data <- read.table(term_files[i], header=TRUE) %>% filter(time==239, species=='protein2') %>% select('transcript')
if (nrow(p2_data) != 0){
y_data[i] <- p2_data$transcript/p1_data$transcript
}else{
y_data[i] <- 0
}
}
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity') + geom_line(size=1, stat='identity') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("Strength of Terminator") + ylab("Ratio of Protein2 transcripts/Protein1 transcripts") + ggtitle("Ratio of Protein Transcripts According to Terminator Strength")
setwd('../../data/parameters_testing/')
prom_files <- list.files(pattern="prom_test_")
prom_files <- mixedsort(sort(prom_files))
x_data <- c(log(10e5), log(10e6), log(10e7), log(10e8), log(10e9), log(10e10), log(10e11), log(10e12), log(10e13), log(10e14), log(10e15), log(10e16), log(10e17), log(10e18), log(10e19), log(10e20))
y_data <- c()
for (i in 1:length(prom_files)){
p1_data <- read.table(prom_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
y_data[i] <- p1_data$transcript
}
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity') + geom_line(size=1, stat='identity') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("Log Scale for Strength of Promoter") + ylab("Protein1 Transcripts") + ggtitle("Abundance of Protein Transcripts According to Promoter Strength")
setwd('../../data/parameters_testing/')
prom_files <- list.files(pattern="prom_test_")
prom_files <- mixedsort(sort(prom_files))
x_data <- c(log(10e5), log(10e6), log(10e7), log(10e8), log(10e9), log(10e10), log(10e11), log(10e12), log(10e13), log(10e14), log(10e15), log(10e16), log(10e17), log(10e18), log(10e19), log(10e20))
y_data <- c()
for (i in 1:length(prom_files)){
p1_data <- read.table(prom_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
y_data[i] <- p1_data$transcript
}
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
prom_line_plot <- ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity') + geom_line(size=1, stat='identity') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("Log Scale for Strength of Promoter") + ylab("Protein1 Transcripts") + ggtitle("Abundance of Protein Transcripts According to Promoter Strength")
ggsave("../../../data/parameters_testing/promoter_parameters.png", prom_line_plot)
setwd('../../data/parameters_testing/')
prom_files <- list.files(pattern="prom_test_")
prom_files <- mixedsort(sort(prom_files))
x_data <- c(log(10e5), log(10e6), log(10e7), log(10e8), log(10e9), log(10e10), log(10e11), log(10e12), log(10e13), log(10e14), log(10e15), log(10e16), log(10e17), log(10e18), log(10e19), log(10e20))
y_data <- c()
for (i in 1:length(prom_files)){
p1_data <- read.table(prom_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
y_data[i] <- p1_data$transcript
}
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
prom_line_plot <- ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity') + geom_line(size=1, stat='identity') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("Log Scale for Strength of Promoter") + ylab("Protein1 Transcripts") + ggtitle("Abundance of Protein Transcripts According to Promoter Strength")
ggsave("../../data/parameters_testing/promoter_parameters.png", prom_line_plot)
setwd('../../data/parameters_testing/')
term_files <- list.files(pattern="term_test_")
term_files <- mixedsort(sort(term_files))
x_data <- c(0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0)
y_data <- c()
for (i in 1:length(term_files)){
p1_data <- read.table(term_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
p2_data <- read.table(term_files[i], header=TRUE) %>% filter(time==239, species=='protein2') %>% select('transcript')
if (nrow(p2_data) != 0){
y_data[i] <- p2_data$transcript/p1_data$transcript
}else{
y_data[i] <- 0
}
}
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
term_line_plot <- ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity') + geom_line(size=1, stat='identity') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("Strength of Terminator") + ylab("Ratio of Protein2 transcripts/Protein1 transcripts") + ggtitle("Ratio of Protein Transcripts According to Terminator Strength")
ggsave("../../data/parameters_testing/terminators_parameters.png", term_line_plot)
setwd('../../data/parameters_testing/')
rnase_files <- list.files(pattern="rnase_test_")
rnase_files <- mixedsort(sort(rnase_files))
x_data <- c(0.0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1.0, 1.05, 1.1, 1.15, 1.2, 1.25, 1.3, 1.35, 1.4, 1.45, 1.5)
y_data <- c()
for (i in 1:length(prom_files)){
p1_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
p2_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein2') %>% select('transcript')
y_data[i] <- p2_data$transcript/p1_data$transcript
}
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
rnase_line_plot <- ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity') + geom_line(size=1, stat='identity') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("Strength of RNAse Site") + ylab("Ratio of Protein2 transcripts/Protein1 transcripts") + ggtitle("Ratio of Protein Transcripts According to RNAse Strength")
ggsave("../../data/parameters_testing/rnase_parameters.png", rnase_line_plot)
setwd('../../data/parameters_testing/')
rnase_files <- list.files(pattern="rnase_test_")
rnase_files <- mixedsort(sort(rnase_files))
x_data <- c(0.0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1.0, 1.05, 1.1, 1.15, 1.2, 1.25, 1.3, 1.35, 1.4, 1.45, 1.5)
y_data <- c()
for (i in 1:length(prom_files)){
p1_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
p2_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein2') %>% select('transcript')
y_data[i] <- p2_data$transcript/p1_data$transcript
}
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
rnase_line_plot <- ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity') + geom_line(size=1, stat='identity') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("Strength of RNAse Site") + ylab("Ratio of Protein2 transcripts/Protein1 transcripts") + ggtitle("Ratio of Protein Transcripts According to RNAse Strength") + panel_border()
ggsave("../../data/parameters_testing/figures/rnase_parameters.png", rnase_line_plot)
setwd('../../data/parameters_testing/')
term_files <- list.files(pattern="term_test_")
term_files <- mixedsort(sort(term_files))
x_data <- c(0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0)
y_data <- c()
for (i in 1:length(term_files)){
p1_data <- read.table(term_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
p2_data <- read.table(term_files[i], header=TRUE) %>% filter(time==239, species=='protein2') %>% select('transcript')
if (nrow(p2_data) != 0){
y_data[i] <- p2_data$transcript/p1_data$transcript
}else{
y_data[i] <- 0
}
}
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
term_line_plot <- ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity') + geom_line(size=1, stat='identity') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("Strength of Terminator") + ylab("Ratio of Protein2 transcripts/Protein1 transcripts") + ggtitle("Ratio of Protein Transcripts According to Terminator Strength") + panel_border()
ggsave("../../data/parameters_testing/figures/terminators_parameters.png", term_line_plot)
setwd('../../data/parameters_testing/')
prom_files <- list.files(pattern="prom_test_")
prom_files <- mixedsort(sort(prom_files))
x_data <- c(log(10e5), log(10e6), log(10e7), log(10e8), log(10e9), log(10e10), log(10e11), log(10e12), log(10e13), log(10e14), log(10e15), log(10e16), log(10e17), log(10e18), log(10e19), log(10e20))
y_data <- c()
for (i in 1:length(prom_files)){
p1_data <- read.table(prom_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
y_data[i] <- p1_data$transcript
}
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
prom_line_plot <- ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity') + geom_line(size=1, stat='identity') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("Log Scale for Strength of Promoter") + ylab("Protein1 Transcripts") + ggtitle("Abundance of Protein Transcripts According to Promoter Strength") + panel_border()
ggsave("../../data/parameters_testing/figures/promoter_parameters.png", prom_line_plot)
setwd('../../data/parameters_testing/')
rnase_files <- list.files(pattern="rnase_test_")
rnase_files <- mixedsort(sort(rnase_files))
x_data <- c(0.0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1.0, 1.05, 1.1, 1.15, 1.2, 1.25, 1.3, 1.35, 1.4, 1.45, 1.5)
y_data <- c()
for (i in 1:length(prom_files)){
p1_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
p2_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein2') %>% select('transcript')
y_data[i] <- p2_data$transcript/p1_data$transcript
}
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
rnase_line_plot <- ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity') + geom_line(size=1, stat='identity') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("Strength of RNAse Site") + ylab("Ratio of Protein2 transcripts/Protein1 transcripts") + ggtitle("Ratio of Protein Transcripts according to RNAse Strengths") + panel_border()
ggsave("../../data/parameters_testing/figures/rnase_parameters.png", rnase_line_plot)
setwd('../../data/parameters_testing/')
term_files <- list.files(pattern="term_test_")
term_files <- mixedsort(sort(term_files))
x_data <- c(0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0)
y_data <- c()
for (i in 1:length(term_files)){
p1_data <- read.table(term_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
p2_data <- read.table(term_files[i], header=TRUE) %>% filter(time==239, species=='protein2') %>% select('transcript')
if (nrow(p2_data) != 0){
y_data[i] <- p2_data$transcript/p1_data$transcript
}else{
y_data[i] <- 0
}
}
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
term_line_plot <- ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity') + geom_line(size=1, stat='identity') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("Strength of Terminator") + ylab("Ratio of Protein2 transcripts/Protein1 transcripts") + ggtitle("Ratio of Protein Transcripts according to Terminator Strengtha") + panel_border()
ggsave("../../data/parameters_testing/figures/terminators_parameters.png", term_line_plot)
setwd('../../data/parameters_testing/')
prom_files <- list.files(pattern="prom_test_")
prom_files <- mixedsort(sort(prom_files))
x_data <- c(log(10e5), log(10e6), log(10e7), log(10e8), log(10e9), log(10e10), log(10e11), log(10e12), log(10e13), log(10e14), log(10e15), log(10e16), log(10e17), log(10e18), log(10e19), log(10e20))
y_data <- c()
for (i in 1:length(prom_files)){
p1_data <- read.table(prom_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
y_data[i] <- p1_data$transcript
}
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
prom_line_plot <- ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity') + geom_line(size=1, stat='identity') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("Log Scale for Strength of Promoter") + ylab("Protein1 Transcripts") + ggtitle("Abundance of Protein Transcripts according to Promoter Strengths") + panel_border()
ggsave("../../data/parameters_testing/figures/promoter_parameters.png", prom_line_plot)
setwd('../../data/parameters_testing/')
prom_files <- list.files(pattern="prom_test_")
prom_files <- mixedsort(sort(prom_files))
x_data <- c(log(10e5), log(10e6), log(10e7), log(10e8), log(10e9), log(10e10), log(10e11), log(10e12), log(10e13), log(10e14), log(10e15), log(10e16), log(10e17), log(10e18), log(10e19), log(10e20))
y_data <- c()
for (i in 1:length(prom_files)){
p1_data <- read.table(prom_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
y_data[i] <- p1_data$transcript
}
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
prom_line_plot <- ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity') + geom_line(size=1, stat='identity') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("Log Scale for Strength of Promoter") + ylab("Protein1 Transcript Abundances") + ggtitle("Abundance of Protein Transcripts according to Promoter Strengths") + panel_border()
ggsave("../../data/parameters_testing/figures/promoter_parameters.png", prom_line_plot)
setwd('../../data/parameters_testing/')
rnase_files <- list.files(pattern="rnase_test_")
rnase_files <- mixedsort(sort(rnase_files))
x_data <- c(0.0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1.0, 1.05, 1.1, 1.15, 1.2, 1.25, 1.3, 1.35, 1.4, 1.45, 1.5)
y_data <- c()
for (i in 1:length(prom_files)){
p1_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
p2_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein2') %>% select('transcript')
y_data[i] <- p2_data$transcript/p1_data$transcript
}
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
rnase_line_plot <- ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity') + geom_line(size=1, stat='identity') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("Strength of RNAse Site") + ylab("Protein2 transcript abundance/Protein1 transcript abundance") + ggtitle("Ratio of Protein Transcripts according to RNAse Strengths") + panel_border()
ggsave("../../data/parameters_testing/figures/rnase_parameters.png", rnase_line_plot)
setwd('../../data/parameters_testing/')
term_files <- list.files(pattern="term_test_")
term_files <- mixedsort(sort(term_files))
x_data <- c(0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0)
y_data <- c()
for (i in 1:length(term_files)){
p1_data <- read.table(term_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
p2_data <- read.table(term_files[i], header=TRUE) %>% filter(time==239, species=='protein2') %>% select('transcript')
if (nrow(p2_data) != 0){
y_data[i] <- p2_data$transcript/p1_data$transcript
}else{
y_data[i] <- 0
}
}
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
term_line_plot <- ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity') + geom_line(size=1, stat='identity') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("Strength of Terminator") + ylab("Protein2 transcript abundance/Protein1 transcript abundance") + ggtitle("Ratio of Protein Transcripts according to Terminator Strengths") + panel_border()
ggsave("../../data/parameters_testing/figures/terminators_parameters.png", term_line_plot)
setwd('../../data/parameters_testing/')
prom_files <- list.files(pattern="prom_test_")
prom_files <- mixedsort(sort(prom_files))
x_data <- c(log(10e5), log(10e6), log(10e7), log(10e8), log(10e9), log(10e10), log(10e11), log(10e12), log(10e13), log(10e14), log(10e15), log(10e16), log(10e17), log(10e18), log(10e19), log(10e20))
y_data <- c()
for (i in 1:length(prom_files)){
p1_data <- read.table(prom_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
y_data[i] <- p1_data$transcript
}
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
prom_line_plot <- ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity') + geom_line(size=1, stat='identity') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("Log Scale for Promoter Strength") + ylab("Protein1 Transcript Abundances") + ggtitle("Abundance of Protein Transcripts according to Promoter Strengths") + panel_border()
ggsave("../../data/parameters_testing/figures/promoter_parameters.png", prom_line_plot)
setwd('../../data/parameters_testing/')
prom_files <- list.files(pattern="prom_test_")
prom_files <- mixedsort(sort(prom_files))
x_data <- c(log(10e5), log(10e6), log(10e7), log(10e8), log(10e9), log(10e10), log(10e11), log(10e12), log(10e13), log(10e14), log(10e15), log(10e16), log(10e17), log(10e18), log(10e19), log(10e20))
y_data <- c()
for (i in 1:length(prom_files)){
p1_data <- read.table(prom_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
y_data[i] <- p1_data$transcript
}
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
prom_line_plot <- ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity') + geom_line(size=1, stat='identity') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("Promoter Strength (Log Scale)") + ylab("Protein1 Transcript Abundances") + ggtitle("Abundance of Protein Transcripts according to Promoter Strengths") + panel_border()
ggsave("../../data/parameters_testing/figures/promoter_parameters.png", prom_line_plot)
setwd('../../data/parameters_testing/')
term_files <- list.files(pattern="term_test_")
term_files <- mixedsort(sort(term_files))
x_data <- c(0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0)
y_data <- c()
for (i in 1:length(term_files)){
p1_data <- read.table(term_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
p2_data <- read.table(term_files[i], header=TRUE) %>% filter(time==239, species=='protein2') %>% select('transcript')
if (nrow(p2_data) != 0){
y_data[i] <- p2_data$transcript/p1_data$transcript
}else{
y_data[i] <- 0
}
}
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
term_line_plot <- ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity') + geom_line(size=1, stat='identity') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("Terminator Strength") + ylab("Protein2 transcript abundance/Protein1 transcript abundance") + ggtitle("Ratio of Protein Transcripts according to Terminator Strengths") + panel_border()
ggsave("../../data/parameters_testing/figures/terminators_parameters.png", term_line_plot)
setwd('../../data/parameters_testing/')
rnase_files <- list.files(pattern="rnase_test_")
rnase_files <- mixedsort(sort(rnase_files))
x_data <- c(0.0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1.0, 1.05, 1.1, 1.15, 1.2, 1.25, 1.3, 1.35, 1.4, 1.45, 1.5)
y_data <- c()
for (i in 1:length(prom_files)){
p1_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
p2_data <- read.table(rnase_files[i], header=TRUE) %>% filter(time==239, species=='protein2') %>% select('transcript')
y_data[i] <- p2_data$transcript/p1_data$transcript
}
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
rnase_line_plot <- ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity') + geom_line(size=1, stat='identity') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("RNAse Site Strength") + ylab("Protein2 transcript abundance/Protein1 transcript abundance") + ggtitle("Ratio of Protein Transcripts according to RNAse Strengths") + panel_border()
ggsave("../../data/parameters_testing/figures/rnase_parameters.png", rnase_line_plot)
setwd('../../data/parameters_testing/')
term_files <- list.files(pattern="term_test_")
term_files <- mixedsort(sort(term_files))
x_data <- c(0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0)
y_data <- c()
for (i in 1:length(term_files)){
p1_data <- read.table(term_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
p2_data <- read.table(term_files[i], header=TRUE) %>% filter(time==239, species=='protein2') %>% select('transcript')
if (nrow(p2_data) != 0){
y_data[i] <- p2_data$transcript/p1_data$transcript
}else{
y_data[i] <- 0
}
}
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
term_line_plot <- ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity') + geom_line(size=1, stat='identity') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("Terminator Strength") + ylab("Protein2 transcript abundance/Protein1 transcript abundance") + ggtitle("Ratio of Protein Transcripts according to Terminator Strengths") + panel_border()
ggsave("../../data/parameters_testing/figures/terminators_parameters.png", term_line_plot)
setwd('../../data/parameters_testing/')
prom_files <- list.files(pattern="prom_test_")
prom_files <- mixedsort(sort(prom_files))
x_data <- c(log(10e5), log(10e6), log(10e7), log(10e8), log(10e9), log(10e10), log(10e11), log(10e12), log(10e13), log(10e14), log(10e15), log(10e16), log(10e17), log(10e18), log(10e19), log(10e20))
y_data <- c()
for (i in 1:length(prom_files)){
p1_data <- read.table(prom_files[i], header=TRUE) %>% filter(time==239, species=='protein1') %>% select('transcript')
y_data[i] <- p1_data$transcript
}
data <- data.frame(cbind(x_data, y_data))
colnames(data) <- c('strengths','values')
prom_line_plot <- ggplot(data, aes(x=strengths, y=values)) + geom_point(stat='identity') + geom_line(size=1, stat='identity') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(size=0.5), axis.ticks=element_line(), axis.text=element_text(size=10), axis.title=element_text(size=10), plot.title=element_text(color="black", hjust=0.5)) + xlab("Promoter Strength (Log Scale)") + ylab("Protein1 Transcript Abundances") + ggtitle("Abundance of Protein Transcripts according to Promoter Strengths") + panel_border()
ggsave("../../data/parameters_testing/figures/promoter_parameters.png", prom_line_plot)
knitr::opts_chunk$set(echo = TRUE)
library(cowplot)
library(dplyr)
library(gridExtra)
library(ggplot2)
library(grid)
#Set working directory to the directory in which the results are contained in
setwd("../../results/2020_4_16/grant_data7_nf0.5_rep0_nmut3/")
all_sos_data <- read.table("sos_data.tsv", header=TRUE)
sos_data_acc <- all_sos_data %>% filter(Accepted=='yes')
#sos_line_plot <- ggplot(sos_data_acc, aes(x=Iteration, y=Sum_of_Squares, color='red')) + geom_point(aes(color='red'), stat="identity") + geom_line(aes(color='red'), size= 1, stat="identity") + geom_line(data=all_sos_data, aes(x=Iteration, y=Sum_of_Squares), color='black') + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
#panel.background = element_blank(), axis.line = element_line(color = "black")) + xlab("Sum of Squares") + ylab("Iteration")
sos_line_plot <- ggplot(sos_data_acc, aes(x=Iteration, y=Sum_of_Squares)) + geom_point(stat="identity") + geom_line(size= 1, stat="identity") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(color = "black", size=1), axis.ticks = element_line(colour = "black", size = 1), axis.text=element_text(size=30,face="bold"), axis.title=element_text(size=30,face="bold")) + xlab("Generation") + ylab("Sum of Squares")
sos_plots <- grid.arrange(sos_line_plot, nrow=1, top=textGrob("Fitness over Time", gp=gpar(fontsize=30, fontface="bold")))
#Change name of sos_graphs to a unique identifier
ggsave("../../../data/figures/sos_graphs_grant_data7_rep0_nf0.5.png", sos_plots, width=20, height=10)
library(reshape2)
library(gridExtra)
library(gtools)
#Set working directory to the directory in which the results are contained in
setwd("../../results/2020_4_16/grant_data7_nf0.5_rep0_nmut3/")
plots_list <- list()
best_files <- list.files(pattern="three_genes_replicated_")
best_files <- mixedsort(sort(best_files))
plots_list <- list()
#Change grant_data name to the target file used
target_data <- read.table("../../../data/grant_data7.tsv", header=TRUE)
target_data <- filter(target_data, species == "protein1" | species == "protein2" | species == "protein3")
target_line_plot <-  ggplot(target_data, aes(fill=species, color=species, size=species, x=time, y=transcript)) + geom_line(stat="identity") + ggtitle("Target Genome Function") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(color = "black", size=1), axis.ticks = element_line(colour = "black", size = 1), axis.text=element_text(color="black",size=30,face="bold"), axis.title=element_text(size=30,face="bold"), plot.title=element_text(size = 25, face = "bold"), legend.title=element_text(size=10), legend.text=element_text(size=9)) + scale_color_manual(values=c("#CC79A7", "#F0E442", "#0072B2")) +  scale_size_manual(values=c(2, 2, 2)) + panel_border() + scale_x_continuous(breaks=seq(0,250,75)) + scale_y_continuous(limits = c(0, 100), expand = c(0, 0))
plots_list[[1]] <- target_line_plot
#Determines if there are too many accepted mutations and, if so, only display the last 20 that were accepted
starting_point <- 1
if (length(best_files) > 20){
starting_point <- length(best_files) - 20
}
plots_start <- 1
#Creates plots for each accepted mutation
for(i in starting_point:length(best_files)){
plots_start <- plots_start + 1
best <- "best"
evolution_title <- "Genome Evolution "
plot_title <- paste(evolution_title, i, sep="")
file_name <- assign(paste(best, i, sep=""), read.table(best_files[i], fill=TRUE, header=TRUE))
file_name <- filter(file_name, species == "protein1" | species == "protein2" | species == "protein3")
plot <- ggplot(file_name, aes(fill=species, color=species, size=species, x=time, y=transcript)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(color = "black", size=1), axis.ticks = element_line(colour = "black", size = 1), axis.text=element_text(color="black",size=30,face="bold"), axis.title=element_text(size=30,face="bold"), plot.title=element_text(size = 25, face = "bold")) + geom_line(stat="identity") + ggtitle(plot_title) + scale_color_manual(values=c("#CC79A7", "#F0E442", "#0072B2")) +  scale_size_manual(values=c(2, 2, 2)) + panel_border() + scale_x_continuous(breaks=seq(0,250,75)) + scale_y_continuous(limits = c(0, 100), expand = c(0, 0))
plots_list[[plots_start]] <- plot
}
#Outputs file with the generated plots
evo_plot <- grid.arrange(grobs=plots_list, nrow=ceiling(length(plots_list) / 3), ncol=5, top=textGrob("Evolution of Gene Expression Pattern", gp=gpar(fontsize=30, fontface="bold")))
#Change name of saved graphs file to a unique identifier
ggsave("../../data/figures/grant_data7_rep0_nf0.5.png", evo_plot, width=30, height=30, limitsize=FALSE)
